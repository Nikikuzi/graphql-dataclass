from dataclasses import dataclass
from typing import Optional

from .enums import (
    ActorType,
    AuditLogOrderField,
    CheckConclusionState,
    CheckStatusState,
    CommentCannotUpdateReason,
    DeploymentStatusState,
    DiscussionCloseReason,
    DiscussionOrderField,
    EnterpriseAdministratorInvitationOrderField,
    EnterpriseAdministratorRole,
    EnterpriseDefaultRepositoryPermissionSettingValue,
    EnterpriseEnabledDisabledSettingValue,
    EnterpriseMembersCanCreateRepositoriesSettingValue,
    EnterpriseMembersCanMakePurchasesSettingValue,
    EnterpriseOrderField,
    EnterpriseServerInstallationOrderField,
    EnterpriseServerUserAccountOrderField,
    EnvironmentOrderField,
    FileViewedState,
    FundingPlatform,
    GistOrderField,
    IssueCommentOrderField,
    IssueOrderField,
    LockReason,
    MannequinOrderField,
    MergeQueueMergingStrategy,
    MigrationSourceType,
    MilestoneOrderField,
    OrderDirection,
    OrganizationMemberRole,
    OrganizationMigrationState,
    PackageFileOrderField,
    PatchStatus,
    ProjectOrderField,
    ProjectV2ItemFieldValueOrderField,
    ProjectV2Roles,
    ProjectV2SingleSelectFieldOptionColor,
    ProjectV2ViewOrderField,
    PullRequestMergeMethod,
    PullRequestReviewDecision,
    PullRequestUpdateState,
    RefOrderField,
    ReportedContentClassifiers,
    RepositoryInteractionLimit,
    RepositoryInteractionLimitExpiry,
    RepositoryInvitationOrderField,
    RepositoryOrderField,
    RepositoryPermission,
    RepositoryRulesetBypassActorBypassMode,
    RepositoryVisibility,
    RoleInOrganization,
    SamlDigestAlgorithm,
    SamlSignatureAlgorithm,
    SavedReplyOrderField,
    SecurityAdvisoryEcosystem,
    SecurityAdvisoryIdentifierType,
    SocialAccountProvider,
    SponsorOrderField,
    SponsorsActivityOrderField,
    SponsorsCountryOrRegionCode,
    SponsorshipOrderField,
    SponsorshipPrivacy,
    SponsorsTierOrderField,
    StatusState,
    SubscriptionState,
    TeamDiscussionOrderField,
    TeamOrderField,
    ThreadSubscriptionFormAction,
    ThreadSubscriptionState,
    UserStatusOrderField,
    WorkflowRunOrderField,
)
from .scalars import ID, URI, Base64String, Date, DateTime, GitObjectID


@dataclass(kw_only=True)
class AbortQueuedMigrationsInput:
    """
    AbortQueuedMigrationsInput - Autogenerated input type of AbortQueuedMigrations

    clientMutationId - A unique identifier for the client performing the mutation.

    ownerId - The ID of the organization that is running the migrations.

    """

    client_mutation_id: Optional[str] = None
    owner_id: ID


@dataclass(kw_only=True)
class AbortRepositoryMigrationInput:
    """
    AbortRepositoryMigrationInput - Autogenerated input type of AbortRepositoryMigration

    clientMutationId - A unique identifier for the client performing the mutation.

    migrationId - The ID of the migration to be aborted.

    """

    client_mutation_id: Optional[str] = None
    migration_id: ID


@dataclass(kw_only=True)
class AcceptEnterpriseAdministratorInvitationInput:
    """
    AcceptEnterpriseAdministratorInvitationInput - Autogenerated input type of AcceptEnterpriseAdministratorInvitation

    clientMutationId - A unique identifier for the client performing the mutation.

    invitationId - The id of the invitation being accepted

    """

    client_mutation_id: Optional[str] = None
    invitation_id: ID


@dataclass(kw_only=True)
class Actor:
    """
    Actor - Represents an object which can take actions on GitHub. Typically a User or Bot.

    avatarUrl - A URL pointing to the actor's public avatar.

    login - The username of the actor.

    resourcePath - The HTTP path for this actor.

    url - The HTTP URL for this actor.

    """

    avatar_url: URI
    login: str
    resource_path: URI
    url: URI


@dataclass(kw_only=True)
class AddAssigneesToAssignableInput:
    """
    AddAssigneesToAssignableInput - Autogenerated input type of AddAssigneesToAssignable

    assignableId - The id of the assignable object to add assignees to.

    assigneeIds - The id of users to add as assignees.

    clientMutationId - A unique identifier for the client performing the mutation.

    """

    assignable_id: ID
    assignee_ids: list[ID]
    client_mutation_id: Optional[str] = None


@dataclass(kw_only=True)
class AddDiscussionCommentInput:
    """
    AddDiscussionCommentInput - Autogenerated input type of AddDiscussionComment

    body - The contents of the comment.

    clientMutationId - A unique identifier for the client performing the mutation.

    discussionId - The Node ID of the discussion to comment on.

    replyToId - The Node ID of the discussion comment within this discussion to reply to.

    """

    body: str
    client_mutation_id: Optional[str] = None
    discussion_id: ID
    reply_to_id: Optional[ID] = None


@dataclass(kw_only=True)
class AddEnterpriseOrganizationMemberInput:
    """
    AddEnterpriseOrganizationMemberInput - Autogenerated input type of AddEnterpriseOrganizationMember

    clientMutationId - A unique identifier for the client performing the mutation.

    enterpriseId - The ID of the enterprise which owns the organization.

    organizationId - The ID of the organization the users will be added to.

    role - The role to assign the users in the organization

    userIds - The IDs of the enterprise members to add.

    """

    client_mutation_id: Optional[str] = None
    enterprise_id: ID
    organization_id: ID
    role: Optional[OrganizationMemberRole] = None
    user_ids: list[ID]


@dataclass(kw_only=True)
class AddEnterpriseSupportEntitlementPayload:
    """
    AddEnterpriseSupportEntitlementPayload - Autogenerated return type of AddEnterpriseSupportEntitlement

    clientMutationId - A unique identifier for the client performing the mutation.

    message - A message confirming the result of adding the support entitlement.

    """

    client_mutation_id: Optional[str] = None
    message: Optional[str] = None


@dataclass(kw_only=True)
class AddProjectCardInput:
    """
    AddProjectCardInput - Autogenerated input type of AddProjectCard

    clientMutationId - A unique identifier for the client performing the mutation.

    contentId - The content of the card. Must be a member of the ProjectCardItem union

    note - The note on the card.

    projectColumnId - The Node ID of the ProjectColumn.

    """

    client_mutation_id: Optional[str] = None
    content_id: Optional[ID] = None
    note: Optional[str] = None
    project_column_id: ID


@dataclass(kw_only=True)
class AddProjectV2DraftIssueInput:
    """
        AddProjectV2DraftIssueInput - Autogenerated input type of AddProjectV2DraftIssue

        assigneeIds - The IDs of the assignees of the draft issue.

        body - The body of the draft issue.

        clientMutationId - A unique identifier for the client performing the mutation.

        projectId - The ID of the Project to add the draft issue to.

        title - The title of the draft issue. A project item can also be created by providing
    the URL of an Issue or Pull Request if you have access.

    """

    assignee_ids: Optional[list[ID]] = None
    body: Optional[str] = None
    client_mutation_id: Optional[str] = None
    project_id: ID
    title: str


@dataclass(kw_only=True)
class AddPullRequestReviewCommentInput:
    """
        AddPullRequestReviewCommentInput - Autogenerated input type of AddPullRequestReviewComment

        body - The text of the comment. This field is required

    **Upcoming Change on 2023-10-01 UTC**
    **Description:** `body` will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply instead
    **Reason:** We are deprecating the addPullRequestReviewComment mutation

        clientMutationId - A unique identifier for the client performing the mutation.

        commitOID - The SHA of the commit to comment on.

    **Upcoming Change on 2023-10-01 UTC**
    **Description:** `commitOID` will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply instead
    **Reason:** We are deprecating the addPullRequestReviewComment mutation

        inReplyTo - The comment id to reply to.

    **Upcoming Change on 2023-10-01 UTC**
    **Description:** `inReplyTo` will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply instead
    **Reason:** We are deprecating the addPullRequestReviewComment mutation

        path - The relative path of the file to comment on.

    **Upcoming Change on 2023-10-01 UTC**
    **Description:** `path` will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply instead
    **Reason:** We are deprecating the addPullRequestReviewComment mutation

        position - The line index in the diff to comment on.

    **Upcoming Change on 2023-10-01 UTC**
    **Description:** `position` will be removed. use addPullRequestReviewThread or addPullRequestReviewThreadReply instead
    **Reason:** We are deprecating the addPullRequestReviewComment mutation

        pullRequestId - The node ID of the pull request reviewing

    **Upcoming Change on 2023-10-01 UTC**
    **Description:** `pullRequestId` will be removed. use
    addPullRequestReviewThread or addPullRequestReviewThreadReply instead
    **Reason:** We are deprecating the addPullRequestReviewComment mutation

        pullRequestReviewId - The Node ID of the review to modify.

    **Upcoming Change on 2023-10-01 UTC**
    **Description:** `pullRequestReviewId` will be removed. use
    addPullRequestReviewThread or addPullRequestReviewThreadReply instead
    **Reason:** We are deprecating the addPullRequestReviewComment mutation

    """

    body: Optional[str] = None
    client_mutation_id: Optional[str] = None
    commit_o_i_d: Optional[GitObjectID] = None
    in_reply_to: Optional[ID] = None
    path: Optional[str] = None
    position: Optional[int] = None
    pull_request_id: Optional[ID] = None
    pull_request_review_id: Optional[ID] = None


@dataclass(kw_only=True)
class AddPullRequestReviewThreadReplyInput:
    """
    AddPullRequestReviewThreadReplyInput - Autogenerated input type of AddPullRequestReviewThreadReply

    body - The text of the reply.

    clientMutationId - A unique identifier for the client performing the mutation.

    pullRequestReviewId - The Node ID of the pending review to which the reply will belong.

    pullRequestReviewThreadId - The Node ID of the thread to which this reply is being written.

    """

    body: str
    client_mutation_id: Optional[str] = None
    pull_request_review_id: Optional[ID] = None
    pull_request_review_thread_id: ID


@dataclass(kw_only=True)
class AddStarInput:
    """
    AddStarInput - Autogenerated input type of AddStar

    clientMutationId - A unique identifier for the client performing the mutation.

    starrableId - The Starrable ID to star.

    """

    client_mutation_id: Optional[str] = None
    starrable_id: ID


@dataclass(kw_only=True)
class AddVerifiableDomainInput:
    """
    AddVerifiableDomainInput - Autogenerated input type of AddVerifiableDomain

    clientMutationId - A unique identifier for the client performing the mutation.

    domain - The URL of the domain

    ownerId - The ID of the owner to add the domain to

    """

    client_mutation_id: Optional[str] = None
    domain: URI
    owner_id: ID


@dataclass(kw_only=True)
class ApproveDeploymentsInput:
    """
    ApproveDeploymentsInput - Autogenerated input type of ApproveDeployments

    clientMutationId - A unique identifier for the client performing the mutation.

    comment - Optional comment for approving deployments

    environmentIds - The ids of environments to reject deployments

    workflowRunId - The node ID of the workflow run containing the pending deployments.

    """

    client_mutation_id: Optional[str] = None
    comment: Optional[str] = None
    environment_ids: list[ID]
    workflow_run_id: ID


@dataclass(kw_only=True)
class ArchiveProjectV2ItemInput:
    """
    ArchiveProjectV2ItemInput - Autogenerated input type of ArchiveProjectV2Item

    clientMutationId - A unique identifier for the client performing the mutation.

    itemId - The ID of the ProjectV2Item to archive.

    projectId - The ID of the Project to archive the item from.

    """

    client_mutation_id: Optional[str] = None
    item_id: ID
    project_id: ID


@dataclass(kw_only=True)
class AuditLogOrder:
    """
    AuditLogOrder - Ordering options for Audit Log connections.

    direction - The ordering direction.

    field - The field to order Audit Logs by.

    """

    direction: Optional[OrderDirection] = None
    field: Optional[AuditLogOrderField] = None


@dataclass(kw_only=True)
class BranchNamePatternParameters:
    """
    BranchNamePatternParameters - Parameters to be used for the branch_name_pattern rule

    name - How this rule will appear to users.

    negate - If true, the rule will fail if the pattern matches.

    operator - The operator to use for matching.

    pattern - The pattern to match with.

    """

    name: Optional[str] = None
    negate: bool
    operator: str
    pattern: str


@dataclass(kw_only=True)
class BulkSponsorship:
    """
        BulkSponsorship - Information about a sponsorship to make for a user or organization with a GitHub
    Sponsors profile, as part of sponsoring many users or organizations at once.

        amount - The amount to pay to the sponsorable in US dollars. Valid values: 1-12000.

        sponsorableId - The ID of the user or organization who is receiving the sponsorship. Required if sponsorableLogin is not given.

        sponsorableLogin - The username of the user or organization who is receiving the sponsorship. Required if sponsorableId is not given.

    """

    amount: int
    sponsorable_id: Optional[ID] = None
    sponsorable_login: Optional[str] = None


@dataclass(kw_only=True)
class CWE:
    """
    CWE - A common weakness enumeration

    cweId - The id of the CWE

    description - A detailed description of this CWE

    id - The Node ID of the CWE object

    name - The name of this CWE

    """

    cwe_id: str
    description: str
    id: ID
    name: str


@dataclass(kw_only=True)
class CancelSponsorshipInput:
    """
        CancelSponsorshipInput - Autogenerated input type of CancelSponsorship

        clientMutationId - A unique identifier for the client performing the mutation.

        sponsorId - The ID of the user or organization who is acting as the sponsor, paying for
    the sponsorship. Required if sponsorLogin is not given.

        sponsorLogin - The username of the user or organization who is acting as the sponsor, paying
    for the sponsorship. Required if sponsorId is not given.

        sponsorableId - The ID of the user or organization who is receiving the sponsorship. Required if sponsorableLogin is not given.

        sponsorableLogin - The username of the user or organization who is receiving the sponsorship. Required if sponsorableId is not given.

    """

    client_mutation_id: Optional[str] = None
    sponsor_id: Optional[ID] = None
    sponsor_login: Optional[str] = None
    sponsorable_id: Optional[ID] = None
    sponsorable_login: Optional[str] = None


@dataclass(kw_only=True)
class CheckAnnotationPosition:
    """
    CheckAnnotationPosition - A character position in a check annotation.

    column - Column number (1 indexed).

    line - Line number (1 indexed).

    """

    column: Optional[int] = None
    line: int


@dataclass(kw_only=True)
class CheckRunAction:
    """
    CheckRunAction - Possible further actions the integrator can perform.

    description - A short explanation of what this action would do.

    identifier - A reference for the action on the integrator's system.

    label - The text to be displayed on a button in the web UI.

    """

    description: str
    identifier: str
    label: str


@dataclass(kw_only=True)
class CheckRunOutputImage:
    """
    CheckRunOutputImage - Images attached to the check run output displayed in the GitHub pull request UI.

    alt - The alternative text for the image.

    caption - A short image description.

    imageUrl - The full URL of the image.

    """

    alt: str
    caption: Optional[str] = None
    image_url: URI


@dataclass(kw_only=True)
class CheckStep:
    """
    CheckStep - A single check step.

    completedAt - Identifies the date and time when the check step was completed.

    conclusion - The conclusion of the check step.

    externalId - A reference for the check step on the integrator's system.

    name - The step's name.

    number - The index of the step in the list of steps of the parent check run.

    secondsToCompletion - Number of seconds to completion.

    startedAt - Identifies the date and time when the check step was started.

    status - The current status of the check step.

    """

    completed_at: Optional[DateTime] = None
    conclusion: Optional[CheckConclusionState] = None
    external_id: Optional[str] = None
    name: str
    number: int
    seconds_to_completion: Optional[int] = None
    started_at: Optional[DateTime] = None
    status: CheckStatusState


@dataclass(kw_only=True)
class CheckSuiteFilter:
    """
    CheckSuiteFilter - The filters that are available when fetching check suites.

    appId - Filters the check suites created by this application ID.

    checkName - Filters the check suites by this name.

    """

    app_id: Optional[int] = None
    check_name: Optional[str] = None


@dataclass(kw_only=True)
class ClearProjectV2ItemFieldValueInput:
    """
    ClearProjectV2ItemFieldValueInput - Autogenerated input type of ClearProjectV2ItemFieldValue

    clientMutationId - A unique identifier for the client performing the mutation.

    fieldId - The ID of the field to be cleared.

    itemId - The ID of the item to be cleared.

    projectId - The ID of the Project.

    """

    client_mutation_id: Optional[str] = None
    field_id: ID
    item_id: ID
    project_id: ID


@dataclass(kw_only=True)
class CloneTemplateRepositoryInput:
    """
        CloneTemplateRepositoryInput - Autogenerated input type of CloneTemplateRepository

        clientMutationId - A unique identifier for the client performing the mutation.

        description - A short description of the new repository.

        includeAllBranches - Whether to copy all branches from the template to the new repository. Defaults
    to copying only the default branch of the template.

        name - The name of the new repository.

        ownerId - The ID of the owner for the new repository.

        repositoryId - The Node ID of the template repository.

        visibility - Indicates the repository's visibility level.

    """

    client_mutation_id: Optional[str] = None
    description: Optional[str] = None
    include_all_branches: Optional[bool] = None
    name: str
    owner_id: ID
    repository_id: ID
    visibility: RepositoryVisibility


@dataclass(kw_only=True)
class CloseDiscussionInput:
    """
    CloseDiscussionInput - Autogenerated input type of CloseDiscussion

    clientMutationId - A unique identifier for the client performing the mutation.

    discussionId - ID of the discussion to be closed.

    reason - The reason why the discussion is being closed.

    """

    client_mutation_id: Optional[str] = None
    discussion_id: ID
    reason: Optional[DiscussionCloseReason] = None


@dataclass(kw_only=True)
class ClosePullRequestInput:
    """
    ClosePullRequestInput - Autogenerated input type of ClosePullRequest

    clientMutationId - A unique identifier for the client performing the mutation.

    pullRequestId - ID of the pull request to be closed.

    """

    client_mutation_id: Optional[str] = None
    pull_request_id: ID


@dataclass(kw_only=True)
class CommitAuthor:
    """
        CommitAuthor - Specifies an author for filtering Git commits.

        emails - Email addresses to filter by. Commits authored by any of the specified email addresses will be returned.

        id - ID of a User to filter by. If non-null, only commits authored by this user
    will be returned. This field takes precedence over emails.

    """

    emails: Optional[list[str]] = None
    id: Optional[ID] = None


@dataclass(kw_only=True)
class CommitAuthorEmailPatternParametersInput:
    """
    CommitAuthorEmailPatternParametersInput - Parameters to be used for the commit_author_email_pattern rule

    name - How this rule will appear to users.

    negate - If true, the rule will fail if the pattern matches.

    operator - The operator to use for matching.

    pattern - The pattern to match with.

    """

    name: Optional[str] = None
    negate: Optional[bool] = None
    operator: str
    pattern: str


@dataclass(kw_only=True)
class CommitMessage:
    """
    CommitMessage - A message to include with a new commit

    body - The body of the message.

    headline - The headline of the message.

    """

    body: Optional[str] = None
    headline: str


@dataclass(kw_only=True)
class CommitMessagePatternParametersInput:
    """
    CommitMessagePatternParametersInput - Parameters to be used for the commit_message_pattern rule

    name - How this rule will appear to users.

    negate - If true, the rule will fail if the pattern matches.

    operator - The operator to use for matching.

    pattern - The pattern to match with.

    """

    name: Optional[str] = None
    negate: Optional[bool] = None
    operator: str
    pattern: str


@dataclass(kw_only=True)
class CommitterEmailPatternParameters:
    """
    CommitterEmailPatternParameters - Parameters to be used for the committer_email_pattern rule

    name - How this rule will appear to users.

    negate - If true, the rule will fail if the pattern matches.

    operator - The operator to use for matching.

    pattern - The pattern to match with.

    """

    name: Optional[str] = None
    negate: bool
    operator: str
    pattern: str


@dataclass(kw_only=True)
class ContributingGuidelines:
    """
    ContributingGuidelines - The Contributing Guidelines for a repository.

    body - The body of the Contributing Guidelines.

    resourcePath - The HTTP path for the Contributing Guidelines.

    url - The HTTP URL for the Contributing Guidelines.

    """

    body: Optional[str] = None
    resource_path: Optional[URI] = None
    url: Optional[URI] = None


@dataclass(kw_only=True)
class ContributionCalendarMonth:
    """
    ContributionCalendarMonth - A month of contributions in a user's contribution graph.

    firstDay - The date of the first day of this month.

    name - The name of the month.

    totalWeeks - How many weeks started in this month.

    year - The year the month occurred in.

    """

    first_day: Date
    name: str
    total_weeks: int
    year: int


@dataclass(kw_only=True)
class ConvertProjectCardNoteToIssueInput:
    """
    ConvertProjectCardNoteToIssueInput - Autogenerated input type of ConvertProjectCardNoteToIssue

    body - The body of the newly created issue.

    clientMutationId - A unique identifier for the client performing the mutation.

    projectCardId - The ProjectCard ID to convert.

    repositoryId - The ID of the repository to create the issue in.

    title - The title of the newly created issue. Defaults to the card's note text.

    """

    body: Optional[str] = None
    client_mutation_id: Optional[str] = None
    project_card_id: ID
    repository_id: ID
    title: Optional[str] = None


@dataclass(kw_only=True)
class CopyProjectV2Input:
    """
    CopyProjectV2Input - Autogenerated input type of CopyProjectV2

    clientMutationId - A unique identifier for the client performing the mutation.

    includeDraftIssues - Include draft issues in the new project

    ownerId - The owner ID of the new project.

    projectId - The ID of the source Project to copy.

    title - The title of the project.

    """

    client_mutation_id: Optional[str] = None
    include_draft_issues: Optional[bool] = None
    owner_id: ID
    project_id: ID
    title: str


@dataclass(kw_only=True)
class CreateCheckSuiteInput:
    """
    CreateCheckSuiteInput - Autogenerated input type of CreateCheckSuite

    clientMutationId - A unique identifier for the client performing the mutation.

    headSha - The SHA of the head commit.

    repositoryId - The Node ID of the repository.

    """

    client_mutation_id: Optional[str] = None
    head_sha: GitObjectID
    repository_id: ID


@dataclass(kw_only=True)
class CreateDeploymentStatusInput:
    """
        CreateDeploymentStatusInput - Autogenerated input type of CreateDeploymentStatus

        autoInactive - Adds a new inactive status to all non-transient, non-production environment
    deployments with the same repository and environment name as the created
    status's deployment.

        clientMutationId - A unique identifier for the client performing the mutation.

        deploymentId - The node ID of the deployment.

        description - A short description of the status. Maximum length of 140 characters.

        environment - If provided, updates the environment of the deploy. Otherwise, does not modify the environment.

        environmentUrl - Sets the URL for accessing your environment.

        logUrl - The log URL to associate with this status.       This URL should contain
    output to keep the user updated while the task is running       or serve as
    historical information for what happened in the deployment.

        state - The state of the deployment.

    """

    auto_inactive: Optional[bool] = None
    client_mutation_id: Optional[str] = None
    deployment_id: ID
    description: Optional[str] = None
    environment: Optional[str] = None
    environment_url: Optional[str] = None
    log_url: Optional[str] = None
    state: DeploymentStatusState


@dataclass(kw_only=True)
class CreateEnterpriseOrganizationInput:
    """
    CreateEnterpriseOrganizationInput - Autogenerated input type of CreateEnterpriseOrganization

    adminLogins - The logins for the administrators of the new organization.

    billingEmail - The email used for sending billing receipts.

    clientMutationId - A unique identifier for the client performing the mutation.

    enterpriseId - The ID of the enterprise owning the new organization.

    login - The login of the new organization.

    profileName - The profile name of the new organization.

    """

    admin_logins: list[str]
    billing_email: str
    client_mutation_id: Optional[str] = None
    enterprise_id: ID
    login: str
    profile_name: str


@dataclass(kw_only=True)
class CreateIpAllowListEntryInput:
    """
    CreateIpAllowListEntryInput - Autogenerated input type of CreateIpAllowListEntry

    allowListValue - An IP address or range of addresses in CIDR notation.

    clientMutationId - A unique identifier for the client performing the mutation.

    isActive - Whether the IP allow list entry is active when an IP allow list is enabled.

    name - An optional name for the IP allow list entry.

    ownerId - The ID of the owner for which to create the new IP allow list entry.

    """

    allow_list_value: str
    client_mutation_id: Optional[str] = None
    is_active: bool
    name: Optional[str] = None
    owner_id: ID


@dataclass(kw_only=True)
class CreateLabelInput:
    """
    CreateLabelInput - Autogenerated input type of CreateLabel

    clientMutationId - A unique identifier for the client performing the mutation.

    color - A 6 character hex code, without the leading #, identifying the color of the label.

    description - A brief description of the label, such as its purpose.

    name - The name of the label.

    repositoryId - The Node ID of the repository.

    """

    client_mutation_id: Optional[str] = None
    color: str
    description: Optional[str] = None
    name: str
    repository_id: ID


@dataclass(kw_only=True)
class CreateMigrationSourceInput:
    """
    CreateMigrationSourceInput - Autogenerated input type of CreateMigrationSource

    accessToken - The migration source access token.

    clientMutationId - A unique identifier for the client performing the mutation.

    githubPat - The GitHub personal access token of the user importing to the target repository.

    name - The migration source name.

    ownerId - The ID of the organization that will own the migration source.

    type - The migration source type.

    url - The migration source URL, for example `https://github.com` or `https://monalisa.ghe.com`.

    """

    access_token: Optional[str] = None
    client_mutation_id: Optional[str] = None
    github_pat: Optional[str] = None
    name: str
    owner_id: ID
    type: MigrationSourceType
    url: Optional[str] = None


@dataclass(kw_only=True)
class CreateProjectV2Input:
    """
    CreateProjectV2Input - Autogenerated input type of CreateProjectV2

    clientMutationId - A unique identifier for the client performing the mutation.

    ownerId - The owner ID to create the project under.

    repositoryId - The repository to link the project to.

    teamId - The team to link the project to. The team will be granted read permissions.

    title - The title of the project.

    """

    client_mutation_id: Optional[str] = None
    owner_id: ID
    repository_id: Optional[ID] = None
    team_id: Optional[ID] = None
    title: str


@dataclass(kw_only=True)
class CreateRefInput:
    """
    CreateRefInput - Autogenerated input type of CreateRef

    clientMutationId - A unique identifier for the client performing the mutation.

    name - The fully qualified name of the new Ref (ie: `refs/heads/my_new_branch`).

    oid - The GitObjectID that the new Ref shall target. Must point to a commit.

    repositoryId - The Node ID of the Repository to create the Ref in.

    """

    client_mutation_id: Optional[str] = None
    name: str
    oid: GitObjectID
    repository_id: ID


@dataclass(kw_only=True)
class CreateSponsorsListingInput:
    """
        CreateSponsorsListingInput - Autogenerated input type of CreateSponsorsListing

        billingCountryOrRegionCode - The country or region where the sponsorable's bank account is located.
    Required if fiscalHostLogin is not specified, ignored when fiscalHostLogin is specified.

        clientMutationId - A unique identifier for the client performing the mutation.

        contactEmail - The email address we should use to contact you about the GitHub Sponsors
    profile being created. This will not be shared publicly. Must be a verified
    email address already on your GitHub account. Only relevant when the
    sponsorable is yourself. Defaults to your primary email address on file if omitted.

        fiscalHostLogin - The username of the supported fiscal host's GitHub organization, if you want
    to receive sponsorship payouts through a fiscal host rather than directly to a
    bank account. For example, 'Open-Source-Collective' for Open Source Collective
    or 'numfocus' for numFOCUS. Case insensitive. See https://docs.github.com/sponsors/receiving-sponsorships-through-github-sponsors/using-a-fiscal-host-to-receive-github-sponsors-payouts
    for more information.

        fiscallyHostedProjectProfileUrl - The URL for your profile page on the fiscal host's website, e.g.,
    https://opencollective.com/babel or https://numfocus.org/project/bokeh.
    Required if fiscalHostLogin is specified.

        fullDescription - Provide an introduction to serve as the main focus that appears on your GitHub
    Sponsors profile. It's a great opportunity to help potential sponsors learn
    more about you, your work, and why their sponsorship is important to you.
    GitHub-flavored Markdown is supported.

        residenceCountryOrRegionCode - The country or region where the sponsorable resides. This is for tax purposes.
    Required if the sponsorable is yourself, ignored when sponsorableLogin
    specifies an organization.

        sponsorableLogin - The username of the organization to create a GitHub Sponsors profile for, if
    desired. Defaults to creating a GitHub Sponsors profile for the authenticated
    user if omitted.

    """

    billing_country_or_region_code: Optional[SponsorsCountryOrRegionCode] = None
    client_mutation_id: Optional[str] = None
    contact_email: Optional[str] = None
    fiscal_host_login: Optional[str] = None
    fiscally_hosted_project_profile_url: Optional[str] = None
    full_description: Optional[str] = None
    residence_country_or_region_code: Optional[SponsorsCountryOrRegionCode] = None
    sponsorable_login: Optional[str] = None


@dataclass(kw_only=True)
class CreateSponsorshipInput:
    """
        CreateSponsorshipInput - Autogenerated input type of CreateSponsorship

        amount - The amount to pay to the sponsorable in US dollars. Required if a tierId is not specified. Valid values: 1-12000.

        clientMutationId - A unique identifier for the client performing the mutation.

        isRecurring - Whether the sponsorship should happen monthly/yearly or just this one time. Required if a tierId is not specified.

        privacyLevel - Specify whether others should be able to see that the sponsor is sponsoring
    the sponsorable. Public visibility still does not reveal which tier is used.

        receiveEmails - Whether the sponsor should receive email updates from the sponsorable.

        sponsorId - The ID of the user or organization who is acting as the sponsor, paying for
    the sponsorship. Required if sponsorLogin is not given.

        sponsorLogin - The username of the user or organization who is acting as the sponsor, paying
    for the sponsorship. Required if sponsorId is not given.

        sponsorableId - The ID of the user or organization who is receiving the sponsorship. Required if sponsorableLogin is not given.

        sponsorableLogin - The username of the user or organization who is receiving the sponsorship. Required if sponsorableId is not given.

        tierId - The ID of one of sponsorable's existing tiers to sponsor at. Required if amount is not specified.

    """

    amount: Optional[int] = None
    client_mutation_id: Optional[str] = None
    is_recurring: Optional[bool] = None
    privacy_level: Optional[SponsorshipPrivacy] = None
    receive_emails: Optional[bool] = None
    sponsor_id: Optional[ID] = None
    sponsor_login: Optional[str] = None
    sponsorable_id: Optional[ID] = None
    sponsorable_login: Optional[str] = None
    tier_id: Optional[ID] = None


@dataclass(kw_only=True)
class CreateTeamDiscussionInput:
    """
        CreateTeamDiscussionInput - Autogenerated input type of CreateTeamDiscussion

        body - The content of the discussion. This field is required.

    **Upcoming Change on 2024-07-01 UTC**
    **Description:** `body` will be removed. Follow the guide at
    https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to
    find a suitable replacement.
    **Reason:** The Team Discussions feature is deprecated in favor of Organization Discussions.

        clientMutationId - A unique identifier for the client performing the mutation.

        private - If true, restricts the visibility of this discussion to team members and
    organization owners. If false or not specified, allows any organization member
    to view this discussion.

    **Upcoming Change on 2024-07-01 UTC**
    **Description:** `private` will be removed. Follow the guide at
    https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to
    find a suitable replacement.
    **Reason:** The Team Discussions feature is deprecated in favor of Organization Discussions.

        teamId - The ID of the team to which the discussion belongs. This field is required.

    **Upcoming Change on 2024-07-01 UTC**
    **Description:** `teamId` will be removed. Follow the guide at
    https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to
    find a suitable replacement.
    **Reason:** The Team Discussions feature is deprecated in favor of Organization Discussions.

        title - The title of the discussion. This field is required.

    **Upcoming Change on 2024-07-01 UTC**
    **Description:** `title` will be removed. Follow the guide at
    https://github.blog/changelog/2023-02-08-sunset-notice-team-discussions/ to
    find a suitable replacement.
    **Reason:** The Team Discussions feature is deprecated in favor of Organization Discussions.

    """

    body: Optional[str] = None
    client_mutation_id: Optional[str] = None
    private: Optional[bool] = None
    team_id: Optional[ID] = None
    title: Optional[str] = None


@dataclass(kw_only=True)
class DeclineTopicSuggestionInput:
    """
        DeclineTopicSuggestionInput - Autogenerated input type of DeclineTopicSuggestion

        clientMutationId - A unique identifier for the client performing the mutation.

        name - The name of the suggested topic.

    **Upcoming Change on 2024-04-01 UTC**
    **Description:** `name` will be removed.
    **Reason:** Suggested topics are no longer supported

        reason - The reason why the suggested topic is declined.

    **Upcoming Change on 2024-04-01 UTC**
    **Description:** `reason` will be removed.
    **Reason:** Suggested topics are no longer supported

        repositoryId - The Node ID of the repository.

    **Upcoming Change on 2024-04-01 UTC**
    **Description:** `repositoryId` will be removed.
    **Reason:** Suggested topics are no longer supported

    """

    client_mutation_id: Optional[str] = None
    name: Optional[str] = None
    reason: Optional[TopicSuggestionDeclineReason] = None
    repository_id: Optional[ID] = None


@dataclass(kw_only=True)
class DeleteBranchProtectionRuleInput:
    """
    DeleteBranchProtectionRuleInput - Autogenerated input type of DeleteBranchProtectionRule

    branchProtectionRuleId - The global relay id of the branch protection rule to be deleted.

    clientMutationId - A unique identifier for the client performing the mutation.

    """

    branch_protection_rule_id: ID
    client_mutation_id: Optional[str] = None


@dataclass(kw_only=True)
class DeleteDeploymentInput:
    """
    DeleteDeploymentInput - Autogenerated input type of DeleteDeployment

    clientMutationId - A unique identifier for the client performing the mutation.

    id - The Node ID of the deployment to be deleted.

    """

    client_mutation_id: Optional[str] = None
    id: ID


@dataclass(kw_only=True)
class DeleteDiscussionCommentInput:
    """
    DeleteDiscussionCommentInput - Autogenerated input type of DeleteDiscussionComment

    clientMutationId - A unique identifier for the client performing the mutation.

    id - The Node id of the discussion comment to delete.

    """

    client_mutation_id: Optional[str] = None
    id: ID


@dataclass(kw_only=True)
class DeleteEnvironmentInput:
    """
    DeleteEnvironmentInput - Autogenerated input type of DeleteEnvironment

    clientMutationId - A unique identifier for the client performing the mutation.

    id - The Node ID of the environment to be deleted.

    """

    client_mutation_id: Optional[str] = None
    id: ID


@dataclass(kw_only=True)
class DeleteIpAllowListEntryInput:
    """
    DeleteIpAllowListEntryInput - Autogenerated input type of DeleteIpAllowListEntry

    clientMutationId - A unique identifier for the client performing the mutation.

    ipAllowListEntryId - The ID of the IP allow list entry to delete.

    """

    client_mutation_id: Optional[str] = None
    ip_allow_list_entry_id: ID


@dataclass(kw_only=True)
class DeleteIssueCommentPayload:
    """
    DeleteIssueCommentPayload - Autogenerated return type of DeleteIssueComment

    clientMutationId - A unique identifier for the client performing the mutation.

    """

    client_mutation_id: Optional[str] = None


@dataclass(kw_only=True)
class DeleteLabelInput:
    """
    DeleteLabelInput - Autogenerated input type of DeleteLabel

    clientMutationId - A unique identifier for the client performing the mutation.

    id - The Node ID of the label to be deleted.

    """

    client_mutation_id: Optional[str] = None
    id: ID


@dataclass(kw_only=True)
class DeleteLinkedBranchInput:
    """
    DeleteLinkedBranchInput - Autogenerated input type of DeleteLinkedBranch

    clientMutationId - A unique identifier for the client performing the mutation.

    linkedBranchId - The ID of the linked branch

    """

    client_mutation_id: Optional[str] = None
    linked_branch_id: ID


@dataclass(kw_only=True)
class DeletePackageVersionPayload:
    """
    DeletePackageVersionPayload - Autogenerated return type of DeletePackageVersion

    clientMutationId - A unique identifier for the client performing the mutation.

    success - Whether or not the operation succeeded.

    """

    client_mutation_id: Optional[str] = None
    success: Optional[bool] = None


@dataclass(kw_only=True)
class DeleteProjectColumnInput:
    """
    DeleteProjectColumnInput - Autogenerated input type of DeleteProjectColumn

    clientMutationId - A unique identifier for the client performing the mutation.

    columnId - The id of the column to delete.

    """

    client_mutation_id: Optional[str] = None
    column_id: ID


@dataclass(kw_only=True)
class DeleteProjectV2FieldInput:
    """
    DeleteProjectV2FieldInput - Autogenerated input type of DeleteProjectV2Field

    clientMutationId - A unique identifier for the client performing the mutation.

    fieldId - The ID of the field to delete.

    """

    client_mutation_id: Optional[str] = None
    field_id: ID


@dataclass(kw_only=True)
class DeleteProjectV2ItemInput:
    """
    DeleteProjectV2ItemInput - Autogenerated input type of DeleteProjectV2Item

    clientMutationId - A unique identifier for the client performing the mutation.

    itemId - The ID of the item to be removed.

    projectId - The ID of the Project from which the item should be removed.

    """

    client_mutation_id: Optional[str] = None
    item_id: ID
    project_id: ID


@dataclass(kw_only=True)
class DeleteProjectV2WorkflowInput:
    """
    DeleteProjectV2WorkflowInput - Autogenerated input type of DeleteProjectV2Workflow

    clientMutationId - A unique identifier for the client performing the mutation.

    workflowId - The ID of the workflow to be removed.

    """

    client_mutation_id: Optional[str] = None
    workflow_id: ID


@dataclass(kw_only=True)
class DeletePullRequestReviewInput:
    """
    DeletePullRequestReviewInput - Autogenerated input type of DeletePullRequestReview

    clientMutationId - A unique identifier for the client performing the mutation.

    pullRequestReviewId - The Node ID of the pull request review to delete.

    """

    client_mutation_id: Optional[str] = None
    pull_request_review_id: ID


@dataclass(kw_only=True)
class DeleteRefPayload:
    """
    DeleteRefPayload - Autogenerated return type of DeleteRef

    clientMutationId - A unique identifier for the client performing the mutation.

    """

    client_mutation_id: Optional[str] = None


@dataclass(kw_only=True)
class DeleteRepositoryRulesetPayload:
    """
    DeleteRepositoryRulesetPayload - Autogenerated return type of DeleteRepositoryRuleset

    clientMutationId - A unique identifier for the client performing the mutation.

    """

    client_mutation_id: Optional[str] = None


@dataclass(kw_only=True)
class DeleteTeamDiscussionCommentPayload:
    """
    DeleteTeamDiscussionCommentPayload - Autogenerated return type of DeleteTeamDiscussionComment

    clientMutationId - A unique identifier for the client performing the mutation.

    """

    client_mutation_id: Optional[str] = None


@dataclass(kw_only=True)
class DeleteTeamDiscussionPayload:
    """
    DeleteTeamDiscussionPayload - Autogenerated return type of DeleteTeamDiscussion

    clientMutationId - A unique identifier for the client performing the mutation.

    """

    client_mutation_id: Optional[str] = None


@dataclass(kw_only=True)
class DeleteVerifiableDomainInput:
    """
    DeleteVerifiableDomainInput - Autogenerated input type of DeleteVerifiableDomain

    clientMutationId - A unique identifier for the client performing the mutation.

    id - The ID of the verifiable domain to delete.

    """

    client_mutation_id: Optional[str] = None
    id: ID


@dataclass(kw_only=True)
class DeployKey:
    """
    DeployKey - A repository deploy key.

    createdAt - Identifies the date and time when the object was created.

    id - The Node ID of the DeployKey object

    key - The deploy key.

    readOnly - Whether or not the deploy key is read only.

    title - The deploy key title.

    verified - Whether or not the deploy key has been verified.

    """

    created_at: DateTime
    id: ID
    key: str
    read_only: bool
    title: str
    verified: bool


@dataclass(kw_only=True)
class DequeuePullRequestInput:
    """
    DequeuePullRequestInput - Autogenerated input type of DequeuePullRequest

    clientMutationId - A unique identifier for the client performing the mutation.

    id - The ID of the pull request to be dequeued.

    """

    client_mutation_id: Optional[str] = None
    id: ID


@dataclass(kw_only=True)
class DiscussionOrder:
    """
    DiscussionOrder - Ways in which lists of discussions can be ordered upon return.

    direction - The direction in which to order discussions by the specified field.

    field - The field by which to order discussions.

    """

    direction: OrderDirection
    field: DiscussionOrderField


@dataclass(kw_only=True)
class DismissPullRequestReviewInput:
    """
    DismissPullRequestReviewInput - Autogenerated input type of DismissPullRequestReview

    clientMutationId - A unique identifier for the client performing the mutation.

    message - The contents of the pull request review dismissal message.

    pullRequestReviewId - The Node ID of the pull request review to modify.

    """

    client_mutation_id: Optional[str] = None
    message: str
    pull_request_review_id: ID


@dataclass(kw_only=True)
class DraftPullRequestReviewComment:
    """
    DraftPullRequestReviewComment - Specifies a review comment to be left with a Pull Request Review.

    body - Body of the comment to leave.

    path - Path to the file being commented on.

    position - Position in the file to leave a comment on.

    """

    body: str
    path: str
    position: int


@dataclass(kw_only=True)
class EnablePullRequestAutoMergeInput:
    """
        EnablePullRequestAutoMergeInput - Autogenerated input type of EnablePullRequestAutoMerge

        authorEmail - The email address to associate with this merge.

        clientMutationId - A unique identifier for the client performing the mutation.

        commitBody - Commit body to use for the commit when the PR is mergable; if omitted, a
    default message will be used. NOTE: when merging with a merge queue any input
    value for commit message is ignored.

        commitHeadline - Commit headline to use for the commit when the PR is mergable; if omitted, a
    default message will be used. NOTE: when merging with a merge queue any input
    value for commit headline is ignored.

        expectedHeadOid - The expected head OID of the pull request.

        mergeMethod - The merge method to use. If omitted, defaults to `MERGE`. NOTE: when merging
    with a merge queue any input value for merge method is ignored.

        pullRequestId - ID of the pull request to enable auto-merge on.

    """

    author_email: Optional[str] = None
    client_mutation_id: Optional[str] = None
    commit_body: Optional[str] = None
    commit_headline: Optional[str] = None
    expected_head_oid: Optional[GitObjectID] = None
    merge_method: Optional[PullRequestMergeMethod] = None
    pull_request_id: ID


@dataclass(kw_only=True)
class EnterpriseAdministratorInvitationOrder:
    """
    EnterpriseAdministratorInvitationOrder - Ordering options for enterprise administrator invitation connections

    direction - The ordering direction.

    field - The field to order enterprise administrator invitations by.

    """

    direction: OrderDirection
    field: EnterpriseAdministratorInvitationOrderField


@dataclass(kw_only=True)
class EnterpriseBillingInfo:
    """
    EnterpriseBillingInfo - Enterprise billing information visible to enterprise billing managers and owners.

    allLicensableUsersCount - The number of licenseable users/emails across the enterprise.

    assetPacks - The number of data packs used by all organizations owned by the enterprise.

    bandwidthQuota - The bandwidth quota in GB for all organizations owned by the enterprise.

    bandwidthUsage - The bandwidth usage in GB for all organizations owned by the enterprise.

    bandwidthUsagePercentage - The bandwidth usage as a percentage of the bandwidth quota.

    storageQuota - The storage quota in GB for all organizations owned by the enterprise.

    storageUsage - The storage usage in GB for all organizations owned by the enterprise.

    storageUsagePercentage - The storage usage as a percentage of the storage quota.

    totalAvailableLicenses - The number of available licenses across all owned organizations based on the unique number of billable users.

    totalLicenses - The total number of licenses allocated.

    """

    all_licensable_users_count: int
    asset_packs: int
    bandwidth_quota: float
    bandwidth_usage: float
    bandwidth_usage_percentage: int
    storage_quota: float
    storage_usage: float
    storage_usage_percentage: int
    total_available_licenses: int
    total_licenses: int


@dataclass(kw_only=True)
class EnterpriseOrder:
    """
    EnterpriseOrder - Ordering options for enterprises.

    direction - The ordering direction.

    field - The field to order enterprises by.

    """

    direction: OrderDirection
    field: EnterpriseOrderField


@dataclass(kw_only=True)
class EnterpriseServerInstallationOrder:
    """
    EnterpriseServerInstallationOrder - Ordering options for Enterprise Server installation connections.

    direction - The ordering direction.

    field - The field to order Enterprise Server installations by.

    """

    direction: OrderDirection
    field: EnterpriseServerInstallationOrderField


@dataclass(kw_only=True)
class EnterpriseServerUserAccountOrder:
    """
    EnterpriseServerUserAccountOrder - Ordering options for Enterprise Server user account connections.

    direction - The ordering direction.

    field - The field to order user accounts by.

    """

    direction: OrderDirection
    field: EnterpriseServerUserAccountOrderField


@dataclass(kw_only=True)
class Environments:
    """
    Environments - Ordering options for environments

    direction - The direction in which to order environments by the specified field.

    field - The field to order environments by.

    """

    direction: OrderDirection
    field: EnvironmentOrderField


@dataclass(kw_only=True)
class FileAddition:
    """
        FileAddition - A command to add a file at the given path with the given contents as part of a
    commit.  Any existing file at that that path will be replaced.

        contents - The base64 encoded contents of the file

        path - The path in the repository where the file will be located

    """

    contents: Base64String
    path: str


@dataclass(kw_only=True)
class FollowOrganizationInput:
    """
    FollowOrganizationInput - Autogenerated input type of FollowOrganization

    clientMutationId - A unique identifier for the client performing the mutation.

    organizationId - ID of the organization to follow.

    """

    client_mutation_id: Optional[str] = None
    organization_id: ID


@dataclass(kw_only=True)
class FundingLink:
    """
    FundingLink - A funding platform link for a repository.

    platform - The funding platform this link is for.

    url - The configured URL for this funding link.

    """

    platform: FundingPlatform
    url: URI


@dataclass(kw_only=True)
class GistOrder:
    """
    GistOrder - Ordering options for gist connections

    direction - The ordering direction.

    field - The field to order repositories by.

    """

    direction: OrderDirection
    field: GistOrderField


@dataclass(kw_only=True)
class GrantEnterpriseOrganizationsMigratorRoleInput:
    """
    GrantEnterpriseOrganizationsMigratorRoleInput - Autogenerated input type of GrantEnterpriseOrganizationsMigratorRole

    clientMutationId - A unique identifier for the client performing the mutation.

    enterpriseId - The ID of the enterprise to which all organizations managed by it will be granted the migrator role.

    login - The login of the user to grant the migrator role

    """

    client_mutation_id: Optional[str] = None
    enterprise_id: ID
    login: str


@dataclass(kw_only=True)
class GrantMigratorRolePayload:
    """
    GrantMigratorRolePayload - Autogenerated return type of GrantMigratorRole

    clientMutationId - A unique identifier for the client performing the mutation.

    success - Did the operation succeed?

    """

    client_mutation_id: Optional[str] = None
    success: Optional[bool] = None


@dataclass(kw_only=True)
class InviteEnterpriseAdminInput:
    """
    InviteEnterpriseAdminInput - Autogenerated input type of InviteEnterpriseAdmin

    clientMutationId - A unique identifier for the client performing the mutation.

    email - The email of the person to invite as an administrator.

    enterpriseId - The ID of the enterprise to which you want to invite an administrator.

    invitee - The login of a user to invite as an administrator.

    role - The role of the administrator.

    """

    client_mutation_id: Optional[str] = None
    email: Optional[str] = None
    enterprise_id: ID
    invitee: Optional[str] = None
    role: Optional[EnterpriseAdministratorRole] = None


@dataclass(kw_only=True)
class IssueCommentOrder:
    """
    IssueCommentOrder - Ways in which lists of issue comments can be ordered upon return.

    direction - The direction in which to order issue comments by the specified field.

    field - The field in which to order issue comments by.

    """

    direction: OrderDirection
    field: IssueCommentOrderField


@dataclass(kw_only=True)
class IssueOrder:
    """
    IssueOrder - Ways in which lists of issues can be ordered upon return.

    direction - The direction in which to order issues by the specified field.

    field - The field in which to order issues by.

    """

    direction: OrderDirection
    field: IssueOrderField


@dataclass(kw_only=True)
class Language:
    """
    Language - Represents a given language found in repositories.

    color - The color defined for the current language.

    id - The Node ID of the Language object

    name - The name of the current language.

    """

    color: Optional[str] = None
    id: ID
    name: str


@dataclass(kw_only=True)
class LicenseRule:
    """
    LicenseRule - Describes a License's conditions, permissions, and limitations

    description - A description of the rule

    key - The machine-readable rule key

    label - The human-readable rule label

    """

    description: str
    key: str
    label: str


@dataclass(kw_only=True)
class LinkProjectV2ToTeamInput:
    """
    LinkProjectV2ToTeamInput - Autogenerated input type of LinkProjectV2ToTeam

    clientMutationId - A unique identifier for the client performing the mutation.

    projectId - The ID of the project to link to the team.

    teamId - The ID of the team to link to the project.

    """

    client_mutation_id: Optional[str] = None
    project_id: ID
    team_id: ID


@dataclass(kw_only=True)
class LockLockableInput:
    """
    LockLockableInput - Autogenerated input type of LockLockable

    clientMutationId - A unique identifier for the client performing the mutation.

    lockReason - A reason for why the item will be locked.

    lockableId - ID of the item to be locked.

    """

    client_mutation_id: Optional[str] = None
    lock_reason: Optional[LockReason] = None
    lockable_id: ID


@dataclass(kw_only=True)
class MannequinOrder:
    """
    MannequinOrder - Ordering options for mannequins.

    direction - The ordering direction.

    field - The field to order mannequins by.

    """

    direction: OrderDirection
    field: MannequinOrderField


@dataclass(kw_only=True)
class MarkFileAsViewedInput:
    """
    MarkFileAsViewedInput - Autogenerated input type of MarkFileAsViewed

    clientMutationId - A unique identifier for the client performing the mutation.

    path - The path of the file to mark as viewed

    pullRequestId - The Node ID of the pull request.

    """

    client_mutation_id: Optional[str] = None
    path: str
    pull_request_id: ID


@dataclass(kw_only=True)
class MarkProjectV2AsTemplateInput:
    """
    MarkProjectV2AsTemplateInput - Autogenerated input type of MarkProjectV2AsTemplate

    clientMutationId - A unique identifier for the client performing the mutation.

    projectId - The ID of the Project to mark as a template.

    """

    client_mutation_id: Optional[str] = None
    project_id: ID


@dataclass(kw_only=True)
class MarketplaceCategory:
    """
    MarketplaceCategory - A public description of a Marketplace category.

    description - The category's description.

    howItWorks - The technical description of how apps listed in this category work with GitHub.

    id - The Node ID of the MarketplaceCategory object

    name - The category's name.

    primaryListingCount - How many Marketplace listings have this as their primary category.

    resourcePath - The HTTP path for this Marketplace category.

    secondaryListingCount - How many Marketplace listings have this as their secondary category.

    slug - The short name of the category used in its URL.

    url - The HTTP URL for this Marketplace category.

    """

    description: Optional[str] = None
    how_it_works: Optional[str] = None
    id: ID
    name: str
    primary_listing_count: int
    resource_path: URI
    secondary_listing_count: int
    slug: str
    url: URI


@dataclass(kw_only=True)
class MergeBranchInput:
    """
    MergeBranchInput - Autogenerated input type of MergeBranch

    authorEmail - The email address to associate with this commit.

    base - The name of the base branch that the provided head will be merged into.

    clientMutationId - A unique identifier for the client performing the mutation.

    commitMessage - Message to use for the merge commit. If omitted, a default will be used.

    head - The head to merge into the base branch. This can be a branch name or a commit GitObjectID.

    repositoryId - The Node ID of the Repository containing the base branch that will be modified.

    """

    author_email: Optional[str] = None
    base: str
    client_mutation_id: Optional[str] = None
    commit_message: Optional[str] = None
    head: str
    repository_id: ID


@dataclass(kw_only=True)
class MergeQueueConfiguration:
    """
        MergeQueueConfiguration - Configuration for a MergeQueue

        checkResponseTimeout - The amount of time in minutes to wait for a check response before considering it a failure.

        maximumEntriesToBuild - The maximum number of entries to build at once.

        maximumEntriesToMerge - The maximum number of entries to merge at once.

        mergeMethod - The merge method to use for this queue.

        mergingStrategy - The strategy to use when merging entries.

        minimumEntriesToMerge - The minimum number of entries required to merge at once.

        minimumEntriesToMergeWaitTime - The amount of time in minutes to wait before ignoring the minumum number of
    entries in the queue requirement and merging a collection of entries

    """

    check_response_timeout: Optional[int] = None
    maximum_entries_to_build: Optional[int] = None
    maximum_entries_to_merge: Optional[int] = None
    merge_method: Optional[PullRequestMergeMethod] = None
    merging_strategy: Optional[MergeQueueMergingStrategy] = None
    minimum_entries_to_merge: Optional[int] = None
    minimum_entries_to_merge_wait_time: Optional[int] = None


@dataclass(kw_only=True)
class MilestoneOrder:
    """
    MilestoneOrder - Ordering options for milestone connections.

    direction - The ordering direction.

    field - The field to order milestones by.

    """

    direction: OrderDirection
    field: MilestoneOrderField


@dataclass(kw_only=True)
class MinimizeCommentInput:
    """
    MinimizeCommentInput - Autogenerated input type of MinimizeComment

    classifier - The classification of comment

    clientMutationId - A unique identifier for the client performing the mutation.

    subjectId - The Node ID of the subject to modify.

    """

    classifier: ReportedContentClassifiers
    client_mutation_id: Optional[str] = None
    subject_id: ID


@dataclass(kw_only=True)
class MoveProjectColumnInput:
    """
    MoveProjectColumnInput - Autogenerated input type of MoveProjectColumn

    afterColumnId - Place the new column after the column with this id. Pass null to place it at the front.

    clientMutationId - A unique identifier for the client performing the mutation.

    columnId - The id of the column to move.

    """

    after_column_id: Optional[ID] = None
    client_mutation_id: Optional[str] = None
    column_id: ID


@dataclass(kw_only=True)
class OauthApplicationAuditEntryData:
    """
    OauthApplicationAuditEntryData - Metadata for an audit entry with action oauth_application.*

    oauthApplicationName - The name of the OAuth application.

    oauthApplicationResourcePath - The HTTP path for the OAuth application

    oauthApplicationUrl - The HTTP URL for the OAuth application

    """

    oauth_application_name: Optional[str] = None
    oauth_application_resource_path: Optional[URI] = None
    oauth_application_url: Optional[URI] = None


@dataclass(kw_only=True)
class OrganizationMigration:
    """
    OrganizationMigration - A GitHub Enterprise Importer (GEI) organization migration.

    createdAt - Identifies the date and time when the object was created.

    databaseId - Identifies the primary key from the database.

    failureReason - The reason the organization migration failed.

    id - The Node ID of the OrganizationMigration object

    remainingRepositoriesCount - The remaining amount of repos to be migrated.

    sourceOrgName - The name of the source organization to be migrated.

    sourceOrgUrl - The URL of the source organization to migrate.

    state - The migration state.

    targetOrgName - The name of the target organization.

    totalRepositoriesCount - The total amount of repositories to be migrated.

    """

    created_at: DateTime
    database_id: Optional[str] = None
    failure_reason: Optional[str] = None
    id: ID
    remaining_repositories_count: Optional[int] = None
    source_org_name: str
    source_org_url: URI
    state: OrganizationMigrationState
    target_org_name: str
    total_repositories_count: Optional[int] = None


@dataclass(kw_only=True)
class PackageFileOrder:
    """
    PackageFileOrder - Ways in which lists of package files can be ordered upon return.

    direction - The direction in which to order package files by the specified field.

    field - The field in which to order package files by.

    """

    direction: Optional[OrderDirection] = None
    field: Optional[PackageFileOrderField] = None


@dataclass(kw_only=True)
class PackageStatistics:
    """
    PackageStatistics - Represents a object that contains package activity statistics such as downloads.

    downloadsTotalCount - Number of times the package was downloaded since it was created.

    """

    downloads_total_count: int


@dataclass(kw_only=True)
class PackageVersionStatistics:
    """
    PackageVersionStatistics - Represents a object that contains package version activity statistics such as downloads.

    downloadsTotalCount - Number of times the package was downloaded since it was created.

    """

    downloads_total_count: int


@dataclass(kw_only=True)
class PinIssueInput:
    """
    PinIssueInput - Autogenerated input type of PinIssue

    clientMutationId - A unique identifier for the client performing the mutation.

    issueId - The ID of the issue to be pinned

    """

    client_mutation_id: Optional[str] = None
    issue_id: ID


@dataclass(kw_only=True)
class ProjectOrder:
    """
    ProjectOrder - Ways in which lists of projects can be ordered upon return.

    direction - The direction in which to order projects by the specified field.

    field - The field in which to order projects by.

    """

    direction: OrderDirection
    field: ProjectOrderField


@dataclass(kw_only=True)
class ProjectV2Collaborator:
    """
    ProjectV2Collaborator - A collaborator to update on a project. Only one of the userId or teamId should be provided.

    role - The role to grant the collaborator

    teamId - The ID of the team as a collaborator.

    userId - The ID of the user as a collaborator.

    """

    role: ProjectV2Roles
    team_id: Optional[ID] = None
    user_id: Optional[ID] = None


@dataclass(kw_only=True)
class ProjectV2FieldValue:
    """
    ProjectV2FieldValue - The values that can be used to update a field of an item inside a Project. Only 1 value can be updated at a time.

    date - The ISO 8601 date to set on the field.

    iterationId - The id of the iteration to set on the field.

    number - The number to set on the field.

    singleSelectOptionId - The id of the single select option to set on the field.

    text - The text to set on the field.

    """

    date: Optional[Date] = None
    iteration_id: Optional[str] = None
    number: Optional[float] = None
    single_select_option_id: Optional[str] = None
    text: Optional[str] = None


@dataclass(kw_only=True)
class ProjectV2ItemFieldValueOrder:
    """
    ProjectV2ItemFieldValueOrder - Ordering options for project v2 item field value connections

    direction - The ordering direction.

    field - The field to order the project v2 item field values by.

    """

    direction: OrderDirection
    field: ProjectV2ItemFieldValueOrderField


@dataclass(kw_only=True)
class ProjectV2IterationFieldIteration:
    """
    ProjectV2IterationFieldIteration - Iteration field iteration settings for a project.

    duration - The iteration's duration in days

    id - The iteration's ID.

    startDate - The iteration's start date

    title - The iteration's title.

    titleHTML - The iteration's html title.

    """

    duration: int
    id: str
    start_date: Date
    title: str
    title_h_t_m_l: str


@dataclass(kw_only=True)
class ProjectV2SingleSelectFieldOption:
    """
    ProjectV2SingleSelectFieldOption - Single select field option for a configuration for a project.

    color - The option's display color.

    description - The option's plain-text description.

    descriptionHTML - The option's description, possibly containing HTML.

    id - The option's ID.

    name - The option's name.

    nameHTML - The option's html name.

    """

    color: ProjectV2SingleSelectFieldOptionColor
    description: str
    description_h_t_m_l: str
    id: str
    name: str
    name_h_t_m_l: str


@dataclass(kw_only=True)
class ProjectV2ViewOrder:
    """
    ProjectV2ViewOrder - Ordering options for project v2 view connections

    direction - The ordering direction.

    field - The field to order the project v2 views by.

    """

    direction: OrderDirection
    field: ProjectV2ViewOrderField


@dataclass(kw_only=True)
class PropertyTargetDefinition:
    """
    PropertyTargetDefinition - A property that must match

    name - The name of the property

    propertyValues - The values to match for

    """

    name: str
    property_values: list[str]


@dataclass(kw_only=True)
class PublicKey:
    """
        PublicKey - A user's public key.

        accessedAt - The last time this authorization was used to perform an action. Values will be null for keys not owned by the user.

        createdAt - Identifies the date and time when the key was created. Keys created before
    March 5th, 2014 have inaccurate values. Values will be null for keys not owned by the user.

        fingerprint - The fingerprint for this PublicKey.

        id - The Node ID of the PublicKey object

        isReadOnly - Whether this PublicKey is read-only or not. Values will be null for keys not owned by the user.

        key - The public key string.

        updatedAt - Identifies the date and time when the key was updated. Keys created before
    March 5th, 2014 may have inaccurate values. Values will be null for keys not
    owned by the user.

    """

    accessed_at: Optional[DateTime] = None
    created_at: Optional[DateTime] = None
    fingerprint: str
    id: ID
    is_read_only: Optional[bool] = None
    key: str
    updated_at: Optional[DateTime] = None


@dataclass(kw_only=True)
class PullRequestChangedFile:
    """
    PullRequestChangedFile - A file changed in a pull request.

    additions - The number of additions to the file.

    changeType - How the file was changed in this PullRequest

    deletions - The number of deletions to the file.

    path - The path of the file.

    viewerViewedState - The state of the file for the viewer.

    """

    additions: int
    change_type: PatchStatus
    deletions: int
    path: str
    viewer_viewed_state: FileViewedState


@dataclass(kw_only=True)
class PullRequestParameters:
    """
    PullRequestParameters - Require all commits be made to a non-target branch and submitted via a pull request before they can be merged.

    dismissStaleReviewsOnPush - New, reviewable commits pushed will dismiss previous pull request review approvals.

    requireCodeOwnerReview - Require an approving review in pull requests that modify files that have a designated code owner.

    requireLastPushApproval - Whether the most recent reviewable push must be approved by someone other than the person who pushed it.

    requiredApprovingReviewCount - The number of approving reviews that are required before a pull request can be merged.

    requiredReviewThreadResolution - All conversations on code must be resolved before a pull request can be merged.

    """

    dismiss_stale_reviews_on_push: bool
    require_code_owner_review: bool
    require_last_push_approval: bool
    required_approving_review_count: int
    required_review_thread_resolution: bool


@dataclass(kw_only=True)
class RateLimit:
    """
    RateLimit - Represents the client's rate limit.

    cost - The point cost for the current query counting against the rate limit.

    limit - The maximum number of points the client is permitted to consume in a 60 minute window.

    nodeCount - The maximum number of nodes this query may return

    remaining - The number of points remaining in the current rate limit window.

    resetAt - The time at which the current rate limit window resets in UTC epoch seconds.

    used - The number of points used in the current rate limit window.

    """

    cost: int
    limit: int
    node_count: int
    remaining: int
    reset_at: DateTime
    used: int


@dataclass(kw_only=True)
class RefNameConditionTarget:
    """
        RefNameConditionTarget - Parameters to be used for the ref_name condition

        exclude - Array of ref names or patterns to exclude. The condition will not pass if any of these patterns match.

        include - Array of ref names or patterns to include. One of these patterns must match
    for the condition to pass. Also accepts `~DEFAULT_BRANCH` to include the
    default branch or `~ALL` to include all branches.

    """

    exclude: list[str]
    include: list[str]


@dataclass(kw_only=True)
class RefOrder:
    """
    RefOrder - Ways in which lists of git refs can be ordered upon return.

    direction - The direction in which to order refs by the specified field.

    field - The field in which to order refs by.

    """

    direction: OrderDirection
    field: RefOrderField


@dataclass(kw_only=True)
class RefUpdateRule:
    """
    RefUpdateRule - Branch protection rules that are enforced on the viewer.

    allowsDeletions - Can this branch be deleted.

    allowsForcePushes - Are force pushes allowed on this branch.

    blocksCreations - Can matching branches be created.

    pattern - Identifies the protection rule pattern.

    requiredApprovingReviewCount - Number of approving reviews required to update matching branches.

    requiredStatusCheckContexts - List of required status check contexts that must pass for commits to be accepted to matching branches.

    requiresCodeOwnerReviews - Are reviews from code owners required to update matching branches.

    requiresConversationResolution - Are conversations required to be resolved before merging.

    requiresLinearHistory - Are merge commits prohibited from being pushed to this branch.

    requiresSignatures - Are commits required to be signed.

    viewerAllowedToDismissReviews - Is the viewer allowed to dismiss reviews.

    viewerCanPush - Can the viewer push to the branch

    """

    allows_deletions: bool
    allows_force_pushes: bool
    blocks_creations: bool
    pattern: str
    required_approving_review_count: Optional[int] = None
    required_status_check_contexts: Optional[list[str]] = None
    requires_code_owner_reviews: bool
    requires_conversation_resolution: bool
    requires_linear_history: bool
    requires_signatures: bool
    viewer_allowed_to_dismiss_reviews: bool
    viewer_can_push: bool


@dataclass(kw_only=True)
class RegenerateVerifiableDomainTokenInput:
    """
    RegenerateVerifiableDomainTokenInput - Autogenerated input type of RegenerateVerifiableDomainToken

    clientMutationId - A unique identifier for the client performing the mutation.

    id - The ID of the verifiable domain to regenerate the verification token of.

    """

    client_mutation_id: Optional[str] = None
    id: ID


@dataclass(kw_only=True)
class RejectDeploymentsInput:
    """
    RejectDeploymentsInput - Autogenerated input type of RejectDeployments

    clientMutationId - A unique identifier for the client performing the mutation.

    comment - Optional comment for rejecting deployments

    environmentIds - The ids of environments to reject deployments

    workflowRunId - The node ID of the workflow run containing the pending deployments.

    """

    client_mutation_id: Optional[str] = None
    comment: Optional[str] = None
    environment_ids: list[ID]
    workflow_run_id: ID


@dataclass(kw_only=True)
class RemoveAssigneesFromAssignableInput:
    """
    RemoveAssigneesFromAssignableInput - Autogenerated input type of RemoveAssigneesFromAssignable

    assignableId - The id of the assignable object to remove assignees from.

    assigneeIds - The id of users to remove as assignees.

    clientMutationId - A unique identifier for the client performing the mutation.

    """

    assignable_id: ID
    assignee_ids: list[ID]
    client_mutation_id: Optional[str] = None


@dataclass(kw_only=True)
class RemoveEnterpriseIdentityProviderInput:
    """
    RemoveEnterpriseIdentityProviderInput - Autogenerated input type of RemoveEnterpriseIdentityProvider

    clientMutationId - A unique identifier for the client performing the mutation.

    enterpriseId - The ID of the enterprise from which to remove the identity provider.

    """

    client_mutation_id: Optional[str] = None
    enterprise_id: ID


@dataclass(kw_only=True)
class RemoveEnterpriseOrganizationInput:
    """
    RemoveEnterpriseOrganizationInput - Autogenerated input type of RemoveEnterpriseOrganization

    clientMutationId - A unique identifier for the client performing the mutation.

    enterpriseId - The ID of the enterprise from which the organization should be removed.

    organizationId - The ID of the organization to remove from the enterprise.

    """

    client_mutation_id: Optional[str] = None
    enterprise_id: ID
    organization_id: ID


@dataclass(kw_only=True)
class RemoveEnterpriseSupportEntitlementPayload:
    """
    RemoveEnterpriseSupportEntitlementPayload - Autogenerated return type of RemoveEnterpriseSupportEntitlement

    clientMutationId - A unique identifier for the client performing the mutation.

    message - A message confirming the result of removing the support entitlement.

    """

    client_mutation_id: Optional[str] = None
    message: Optional[str] = None


@dataclass(kw_only=True)
class RemoveOutsideCollaboratorInput:
    """
    RemoveOutsideCollaboratorInput - Autogenerated input type of RemoveOutsideCollaborator

    clientMutationId - A unique identifier for the client performing the mutation.

    organizationId - The ID of the organization to remove the outside collaborator from.

    userId - The ID of the outside collaborator to remove.

    """

    client_mutation_id: Optional[str] = None
    organization_id: ID
    user_id: ID


@dataclass(kw_only=True)
class RemoveStarInput:
    """
    RemoveStarInput - Autogenerated input type of RemoveStar

    clientMutationId - A unique identifier for the client performing the mutation.

    starrableId - The Starrable ID to unstar.

    """

    client_mutation_id: Optional[str] = None
    starrable_id: ID


@dataclass(kw_only=True)
class ReopenDiscussionInput:
    """
    ReopenDiscussionInput - Autogenerated input type of ReopenDiscussion

    clientMutationId - A unique identifier for the client performing the mutation.

    discussionId - ID of the discussion to be reopened.

    """

    client_mutation_id: Optional[str] = None
    discussion_id: ID


@dataclass(kw_only=True)
class ReopenPullRequestInput:
    """
    ReopenPullRequestInput - Autogenerated input type of ReopenPullRequest

    clientMutationId - A unique identifier for the client performing the mutation.

    pullRequestId - ID of the pull request to be reopened.

    """

    client_mutation_id: Optional[str] = None
    pull_request_id: ID


@dataclass(kw_only=True)
class RepositoryContactLink:
    """
    RepositoryContactLink - A repository contact link.

    about - The contact link purpose.

    name - The contact link name.

    url - The contact link URL.

    """

    about: str
    name: str
    url: URI


@dataclass(kw_only=True)
class RepositoryIdConditionTargetInput:
    """
    RepositoryIdConditionTargetInput - Parameters to be used for the repository_id condition

    repositoryIds - One of these repo IDs must match the repo.

    """

    repository_ids: list[ID]


@dataclass(kw_only=True)
class RepositoryInvitationOrder:
    """
    RepositoryInvitationOrder - Ordering options for repository invitation connections.

    direction - The ordering direction.

    field - The field to order repository invitations by.

    """

    direction: OrderDirection
    field: RepositoryInvitationOrderField


@dataclass(kw_only=True)
class RepositoryNameConditionTarget:
    """
        RepositoryNameConditionTarget - Parameters to be used for the repository_name condition

        exclude - Array of repository names or patterns to exclude. The condition will not pass if any of these patterns match.

        include - Array of repository names or patterns to include. One of these patterns must
    match for the condition to pass. Also accepts `~ALL` to include all repositories.

        protected - Target changes that match these patterns will be prevented except by those with bypass permissions.

    """

    exclude: list[str]
    include: list[str]
    protected: bool


@dataclass(kw_only=True)
class RepositoryOrder:
    """
    RepositoryOrder - Ordering options for repository connections

    direction - The ordering direction.

    field - The field to order repositories by.

    """

    direction: OrderDirection
    field: RepositoryOrderField


@dataclass(kw_only=True)
class RepositoryRulesetBypassActorInput:
    """
        RepositoryRulesetBypassActorInput - Specifies the attributes for a new or updated ruleset bypass actor. Only one of
    `actor_id`, `repository_role_database_id`, or `organization_admin` should be specified.

        actorId - For Team and Integration bypasses, the Team or Integration ID

        bypassMode - The bypass mode for this actor.

        organizationAdmin - For organization owner bypasses, true

        repositoryRoleDatabaseId - For role bypasses, the role database ID

    """

    actor_id: Optional[ID] = None
    bypass_mode: RepositoryRulesetBypassActorBypassMode
    organization_admin: Optional[bool] = None
    repository_role_database_id: Optional[int] = None


@dataclass(kw_only=True)
class RequirableByPullRequest:
    """
    RequirableByPullRequest - Represents a type that can be required by a pull request for merging.

    isRequired - Whether this is required to pass before merging for a specific pull request.

    """

    is_required: bool


@dataclass(kw_only=True)
class RequiredDeploymentsParametersInput:
    """
    RequiredDeploymentsParametersInput - Choose which environments must be successfully deployed to before refs can be pushed into a ref that matches this rule.

    requiredDeploymentEnvironments - The environments that must be successfully deployed to before branches can be merged.

    """

    required_deployment_environments: list[str]


@dataclass(kw_only=True)
class RerequestCheckSuiteInput:
    """
    RerequestCheckSuiteInput - Autogenerated input type of RerequestCheckSuite

    checkSuiteId - The Node ID of the check suite.

    clientMutationId - A unique identifier for the client performing the mutation.

    repositoryId - The Node ID of the repository.

    """

    check_suite_id: ID
    client_mutation_id: Optional[str] = None
    repository_id: ID


@dataclass(kw_only=True)
class RetireSponsorsTierInput:
    """
    RetireSponsorsTierInput - Autogenerated input type of RetireSponsorsTier

    clientMutationId - A unique identifier for the client performing the mutation.

    tierId - The ID of the published tier to retire.

    """

    client_mutation_id: Optional[str] = None
    tier_id: ID


@dataclass(kw_only=True)
class ReviewStatusHovercardContext:
    """
        ReviewStatusHovercardContext - A hovercard context with a message describing the current code review state of the pull
    request.

        message - A string describing this context

        octicon - An octicon to accompany this context

        reviewDecision - The current status of the pull request with respect to code review.

    """

    message: str
    octicon: str
    review_decision: Optional[PullRequestReviewDecision] = None


@dataclass(kw_only=True)
class RevokeMigratorRoleInput:
    """
    RevokeMigratorRoleInput - Autogenerated input type of RevokeMigratorRole

    actor - The user login or Team slug to revoke the migrator role from.

    actorType - Specifies the type of the actor, can be either USER or TEAM.

    clientMutationId - A unique identifier for the client performing the mutation.

    organizationId - The ID of the organization that the user/team belongs to.

    """

    actor: str
    actor_type: ActorType
    client_mutation_id: Optional[str] = None
    organization_id: ID


@dataclass(kw_only=True)
class SavedReplyOrder:
    """
    SavedReplyOrder - Ordering options for saved reply connections.

    direction - The ordering direction.

    field - The field to order saved replies by.

    """

    direction: OrderDirection
    field: SavedReplyOrderField


@dataclass(kw_only=True)
class SecurityAdvisoryIdentifierFilter:
    """
    SecurityAdvisoryIdentifierFilter - An advisory identifier to filter results on.

    type - The identifier type.

    value - The identifier string. Supports exact or partial matching.

    """

    type: SecurityAdvisoryIdentifierType
    value: str


@dataclass(kw_only=True)
class SecurityAdvisoryPackage:
    """
    SecurityAdvisoryPackage - An individual package

    ecosystem - The ecosystem the package belongs to, e.g. RUBYGEMS, NPM

    name - The package name

    """

    ecosystem: SecurityAdvisoryEcosystem
    name: str


@dataclass(kw_only=True)
class SecurityAdvisoryReference:
    """
    SecurityAdvisoryReference - A GitHub Security Advisory Reference

    url - A publicly accessible reference

    """

    url: URI


@dataclass(kw_only=True)
class SetEnterpriseIdentityProviderInput:
    """
    SetEnterpriseIdentityProviderInput - Autogenerated input type of SetEnterpriseIdentityProvider

    clientMutationId - A unique identifier for the client performing the mutation.

    digestMethod - The digest algorithm used to sign SAML requests for the identity provider.

    enterpriseId - The ID of the enterprise on which to set an identity provider.

    idpCertificate - The x509 certificate used by the identity provider to sign assertions and responses.

    issuer - The Issuer Entity ID for the SAML identity provider

    signatureMethod - The signature algorithm used to sign SAML requests for the identity provider.

    ssoUrl - The URL endpoint for the identity provider's SAML SSO.

    """

    client_mutation_id: Optional[str] = None
    digest_method: SamlDigestAlgorithm
    enterprise_id: ID
    idp_certificate: str
    issuer: Optional[str] = None
    signature_method: SamlSignatureAlgorithm
    sso_url: URI


@dataclass(kw_only=True)
class SetRepositoryInteractionLimitInput:
    """
    SetRepositoryInteractionLimitInput - Autogenerated input type of SetRepositoryInteractionLimit

    clientMutationId - A unique identifier for the client performing the mutation.

    expiry - When this limit should expire.

    limit - The limit to set.

    repositoryId - The ID of the repository to set a limit for.

    """

    client_mutation_id: Optional[str] = None
    expiry: Optional[RepositoryInteractionLimitExpiry] = None
    limit: RepositoryInteractionLimit
    repository_id: ID


@dataclass(kw_only=True)
class SocialAccount:
    """
    SocialAccount - Social media profile associated with a user.

    displayName - Name of the social media account as it appears on the profile.

    provider - Software or company that hosts the social media account.

    url - URL of the social media account.

    """

    display_name: str
    provider: SocialAccountProvider
    url: URI


@dataclass(kw_only=True)
class SponsorOrder:
    """
    SponsorOrder - Ordering options for connections to get sponsor entities for GitHub Sponsors.

    direction - The ordering direction.

    field - The field to order sponsor entities by.

    """

    direction: OrderDirection
    field: SponsorOrderField


@dataclass(kw_only=True)
class SponsorsActivityOrder:
    """
    SponsorsActivityOrder - Ordering options for GitHub Sponsors activity connections.

    direction - The ordering direction.

    field - The field to order activity by.

    """

    direction: OrderDirection
    field: SponsorsActivityOrderField


@dataclass(kw_only=True)
class SponsorsTierOrder:
    """
    SponsorsTierOrder - Ordering options for Sponsors tiers connections.

    direction - The ordering direction.

    field - The field to order tiers by.

    """

    direction: OrderDirection
    field: SponsorsTierOrderField


@dataclass(kw_only=True)
class SponsorshipOrder:
    """
    SponsorshipOrder - Ordering options for sponsorship connections.

    direction - The ordering direction.

    field - The field to order sponsorship by.

    """

    direction: OrderDirection
    field: SponsorshipOrderField


@dataclass(kw_only=True)
class StartOrganizationMigrationInput:
    """
    StartOrganizationMigrationInput - Autogenerated input type of StartOrganizationMigration

    clientMutationId - A unique identifier for the client performing the mutation.

    sourceAccessToken - The migration source access token.

    sourceOrgUrl - The URL of the organization to migrate.

    targetEnterpriseId - The ID of the enterprise the target organization belongs to.

    targetOrgName - The name of the target organization.

    """

    client_mutation_id: Optional[str] = None
    source_access_token: str
    source_org_url: URI
    target_enterprise_id: ID
    target_org_name: str


@dataclass(kw_only=True)
class StatusCheckConfiguration:
    """
    StatusCheckConfiguration - Required status check

    context - The status check context name that must be present on the commit.

    integrationId - The optional integration ID that this status check must originate from.

    """

    context: str
    integration_id: Optional[int] = None


@dataclass(kw_only=True)
class StatusContextStateCount:
    """
    StatusContextStateCount - Represents a count of the state of a status context.

    count - The number of statuses with this state.

    state - The state of a status context.

    """

    count: int
    state: StatusState


@dataclass(kw_only=True)
class Submodule:
    """
    Submodule - A pointer to a repository at a specific revision embedded inside another repository.

    branch - The branch of the upstream submodule for tracking updates

    gitUrl - The git URL of the submodule repository

    name - The name of the submodule in .gitmodules

    nameRaw - The name of the submodule in .gitmodules (Base64-encoded)

    path - The path in the superproject that this submodule is located in

    pathRaw - The path in the superproject that this submodule is located in (Base64-encoded)

    subprojectCommitOid - The commit revision of the subproject repository being tracked by the submodule

    """

    branch: Optional[str] = None
    git_url: URI
    name: str
    name_raw: Base64String
    path: str
    path_raw: Base64String
    subproject_commit_oid: Optional[GitObjectID] = None


@dataclass(kw_only=True)
class SubscribableThread:
    """
    SubscribableThread - Entities that can be subscribed to for web and email notifications.

    id - The Node ID of the SubscribableThread object

    viewerThreadSubscriptionFormAction - Identifies the viewer's thread subscription form action.

    viewerThreadSubscriptionStatus - Identifies the viewer's thread subscription status.

    """

    id: ID
    viewer_thread_subscription_form_action: Optional[
        ThreadSubscriptionFormAction
    ] = None
    viewer_thread_subscription_status: Optional[ThreadSubscriptionState] = None


@dataclass(kw_only=True)
class TagNamePatternParametersInput:
    """
    TagNamePatternParametersInput - Parameters to be used for the tag_name_pattern rule

    name - How this rule will appear to users.

    negate - If true, the rule will fail if the pattern matches.

    operator - The operator to use for matching.

    pattern - The pattern to match with.

    """

    name: Optional[str] = None
    negate: Optional[bool] = None
    operator: str
    pattern: str


@dataclass(kw_only=True)
class TeamDiscussionOrder:
    """
    TeamDiscussionOrder - Ways in which team discussion connections can be ordered.

    direction - The direction in which to order nodes.

    field - The field by which to order nodes.

    """

    direction: OrderDirection
    field: TeamDiscussionOrderField


@dataclass(kw_only=True)
class TeamOrder:
    """
    TeamOrder - Ways in which team connections can be ordered.

    direction - The direction in which to order nodes.

    field - The field in which to order nodes by.

    """

    direction: OrderDirection
    field: TeamOrderField


@dataclass(kw_only=True)
class TextMatchHighlight:
    """
    TextMatchHighlight - Represents a single highlight in a search result match.

    beginIndice - The indice in the fragment where the matched text begins.

    endIndice - The indice in the fragment where the matched text ends.

    text - The text matched.

    """

    begin_indice: int
    end_indice: int
    text: str


@dataclass(kw_only=True)
class TransferIssueInput:
    """
    TransferIssueInput - Autogenerated input type of TransferIssue

    clientMutationId - A unique identifier for the client performing the mutation.

    createLabelsIfMissing - Whether to create labels if they don't exist in the target repository (matched by name)

    issueId - The Node ID of the issue to be transferred

    repositoryId - The Node ID of the repository the issue should be transferred to

    """

    client_mutation_id: Optional[str] = None
    create_labels_if_missing: Optional[bool] = None
    issue_id: ID
    repository_id: ID


@dataclass(kw_only=True)
class UnarchiveRepositoryInput:
    """
    UnarchiveRepositoryInput - Autogenerated input type of UnarchiveRepository

    clientMutationId - A unique identifier for the client performing the mutation.

    repositoryId - The ID of the repository to unarchive.

    """

    client_mutation_id: Optional[str] = None
    repository_id: ID


@dataclass(kw_only=True)
class UnfollowUserInput:
    """
    UnfollowUserInput - Autogenerated input type of UnfollowUser

    clientMutationId - A unique identifier for the client performing the mutation.

    userId - ID of the user to unfollow.

    """

    client_mutation_id: Optional[str] = None
    user_id: ID


@dataclass(kw_only=True)
class UnlinkProjectV2FromRepositoryInput:
    """
    UnlinkProjectV2FromRepositoryInput - Autogenerated input type of UnlinkProjectV2FromRepository

    clientMutationId - A unique identifier for the client performing the mutation.

    projectId - The ID of the project to unlink from the repository.

    repositoryId - The ID of the repository to unlink from the project.

    """

    client_mutation_id: Optional[str] = None
    project_id: ID
    repository_id: ID


@dataclass(kw_only=True)
class UnlinkRepositoryFromProjectInput:
    """
    UnlinkRepositoryFromProjectInput - Autogenerated input type of UnlinkRepositoryFromProject

    clientMutationId - A unique identifier for the client performing the mutation.

    projectId - The ID of the Project linked to the Repository.

    repositoryId - The ID of the Repository linked to the Project.

    """

    client_mutation_id: Optional[str] = None
    project_id: ID
    repository_id: ID


@dataclass(kw_only=True)
class UnmarkDiscussionCommentAsAnswerInput:
    """
    UnmarkDiscussionCommentAsAnswerInput - Autogenerated input type of UnmarkDiscussionCommentAsAnswer

    clientMutationId - A unique identifier for the client performing the mutation.

    id - The Node ID of the discussion comment to unmark as an answer.

    """

    client_mutation_id: Optional[str] = None
    id: ID


@dataclass(kw_only=True)
class UnmarkIssueAsDuplicateInput:
    """
    UnmarkIssueAsDuplicateInput - Autogenerated input type of UnmarkIssueAsDuplicate

    canonicalId - ID of the issue or pull request currently considered canonical/authoritative/original.

    clientMutationId - A unique identifier for the client performing the mutation.

    duplicateId - ID of the issue or pull request currently marked as a duplicate.

    """

    canonical_id: ID
    client_mutation_id: Optional[str] = None
    duplicate_id: ID


@dataclass(kw_only=True)
class UnminimizeCommentInput:
    """
    UnminimizeCommentInput - Autogenerated input type of UnminimizeComment

    clientMutationId - A unique identifier for the client performing the mutation.

    subjectId - The Node ID of the subject to modify.

    """

    client_mutation_id: Optional[str] = None
    subject_id: ID


@dataclass(kw_only=True)
class UnresolveReviewThreadInput:
    """
    UnresolveReviewThreadInput - Autogenerated input type of UnresolveReviewThread

    clientMutationId - A unique identifier for the client performing the mutation.

    threadId - The ID of the thread to unresolve

    """

    client_mutation_id: Optional[str] = None
    thread_id: ID


@dataclass(kw_only=True)
class UnsubscribeFromNotificationsPayload:
    """
    UnsubscribeFromNotificationsPayload - Autogenerated return type of UnsubscribeFromNotifications

    clientMutationId - A unique identifier for the client performing the mutation.

    success - Did the operation succeed?

    """

    client_mutation_id: Optional[str] = None
    success: Optional[bool] = None


@dataclass(kw_only=True)
class UpdatableComment:
    """
    UpdatableComment - Comments that can be updated.

    viewerCannotUpdateReasons - Reasons why the current viewer can not update this comment.

    """

    viewer_cannot_update_reasons: list[CommentCannotUpdateReason]


@dataclass(kw_only=True)
class UpdateDiscussionInput:
    """
    UpdateDiscussionInput - Autogenerated input type of UpdateDiscussion

    body - The new contents of the discussion body.

    categoryId - The Node ID of a discussion category within the same repository to change this discussion to.

    clientMutationId - A unique identifier for the client performing the mutation.

    discussionId - The Node ID of the discussion to update.

    title - The new discussion title.

    """

    body: Optional[str] = None
    category_id: Optional[ID] = None
    client_mutation_id: Optional[str] = None
    discussion_id: ID
    title: Optional[str] = None


@dataclass(kw_only=True)
class UpdateEnterpriseAdministratorRolePayload:
    """
    UpdateEnterpriseAdministratorRolePayload - Autogenerated return type of UpdateEnterpriseAdministratorRole

    clientMutationId - A unique identifier for the client performing the mutation.

    message - A message confirming the result of changing the administrator's role.

    """

    client_mutation_id: Optional[str] = None
    message: Optional[str] = None


@dataclass(kw_only=True)
class UpdateEnterpriseDefaultRepositoryPermissionSettingInput:
    """
    UpdateEnterpriseDefaultRepositoryPermissionSettingInput - Autogenerated input type of UpdateEnterpriseDefaultRepositoryPermissionSetting

    clientMutationId - A unique identifier for the client performing the mutation.

    enterpriseId - The ID of the enterprise on which to set the base repository permission setting.

    settingValue - The value for the base repository permission setting on the enterprise.

    """

    client_mutation_id: Optional[str] = None
    enterprise_id: ID
    setting_value: EnterpriseDefaultRepositoryPermissionSettingValue


@dataclass(kw_only=True)
class UpdateEnterpriseMembersCanCreateRepositoriesSettingInput:
    """
        UpdateEnterpriseMembersCanCreateRepositoriesSettingInput - Autogenerated input type of UpdateEnterpriseMembersCanCreateRepositoriesSetting

        clientMutationId - A unique identifier for the client performing the mutation.

        enterpriseId - The ID of the enterprise on which to set the members can create repositories setting.

        membersCanCreateInternalRepositories - Allow members to create internal repositories. Defaults to current value.

        membersCanCreatePrivateRepositories - Allow members to create private repositories. Defaults to current value.

        membersCanCreatePublicRepositories - Allow members to create public repositories. Defaults to current value.

        membersCanCreateRepositoriesPolicyEnabled - When false, allow member organizations to set their own repository creation member privileges.

        settingValue - Value for the members can create repositories setting on the enterprise. This
    or the granular public/private/internal allowed fields (but not both) must be provided.

    """

    client_mutation_id: Optional[str] = None
    enterprise_id: ID
    members_can_create_internal_repositories: Optional[bool] = None
    members_can_create_private_repositories: Optional[bool] = None
    members_can_create_public_repositories: Optional[bool] = None
    members_can_create_repositories_policy_enabled: Optional[bool] = None
    setting_value: Optional[EnterpriseMembersCanCreateRepositoriesSettingValue] = None


@dataclass(kw_only=True)
class UpdateEnterpriseMembersCanDeleteRepositoriesSettingInput:
    """
    UpdateEnterpriseMembersCanDeleteRepositoriesSettingInput - Autogenerated input type of UpdateEnterpriseMembersCanDeleteRepositoriesSetting

    clientMutationId - A unique identifier for the client performing the mutation.

    enterpriseId - The ID of the enterprise on which to set the members can delete repositories setting.

    settingValue - The value for the members can delete repositories setting on the enterprise.

    """

    client_mutation_id: Optional[str] = None
    enterprise_id: ID
    setting_value: EnterpriseEnabledDisabledSettingValue


@dataclass(kw_only=True)
class UpdateEnterpriseMembersCanMakePurchasesSettingInput:
    """
    UpdateEnterpriseMembersCanMakePurchasesSettingInput - Autogenerated input type of UpdateEnterpriseMembersCanMakePurchasesSetting

    clientMutationId - A unique identifier for the client performing the mutation.

    enterpriseId - The ID of the enterprise on which to set the members can make purchases setting.

    settingValue - The value for the members can make purchases setting on the enterprise.

    """

    client_mutation_id: Optional[str] = None
    enterprise_id: ID
    setting_value: EnterpriseMembersCanMakePurchasesSettingValue


@dataclass(kw_only=True)
class UpdateEnterpriseMembersCanViewDependencyInsightsSettingInput:
    """
    UpdateEnterpriseMembersCanViewDependencyInsightsSettingInput - Autogenerated input type of UpdateEnterpriseMembersCanViewDependencyInsightsSetting

    clientMutationId - A unique identifier for the client performing the mutation.

    enterpriseId - The ID of the enterprise on which to set the members can view dependency insights setting.

    settingValue - The value for the members can view dependency insights setting on the enterprise.

    """

    client_mutation_id: Optional[str] = None
    enterprise_id: ID
    setting_value: EnterpriseEnabledDisabledSettingValue


@dataclass(kw_only=True)
class UpdateEnterpriseOwnerOrganizationRoleInput:
    """
    UpdateEnterpriseOwnerOrganizationRoleInput - Autogenerated input type of UpdateEnterpriseOwnerOrganizationRole

    clientMutationId - A unique identifier for the client performing the mutation.

    enterpriseId - The ID of the Enterprise which the owner belongs to.

    organizationId - The ID of the organization for membership change.

    organizationRole - The role to assume in the organization.

    """

    client_mutation_id: Optional[str] = None
    enterprise_id: ID
    organization_id: ID
    organization_role: RoleInOrganization


@dataclass(kw_only=True)
class UpdateEnterpriseProfileInput:
    """
    UpdateEnterpriseProfileInput - Autogenerated input type of UpdateEnterpriseProfile

    clientMutationId - A unique identifier for the client performing the mutation.

    description - The description of the enterprise.

    enterpriseId - The Enterprise ID to update.

    location - The location of the enterprise.

    name - The name of the enterprise.

    websiteUrl - The URL of the enterprise's website.

    """

    client_mutation_id: Optional[str] = None
    description: Optional[str] = None
    enterprise_id: ID
    location: Optional[str] = None
    name: Optional[str] = None
    website_url: Optional[str] = None


@dataclass(kw_only=True)
class UpdateEnterpriseTeamDiscussionsSettingInput:
    """
    UpdateEnterpriseTeamDiscussionsSettingInput - Autogenerated input type of UpdateEnterpriseTeamDiscussionsSetting

    clientMutationId - A unique identifier for the client performing the mutation.

    enterpriseId - The ID of the enterprise on which to set the team discussions setting.

    settingValue - The value for the team discussions setting on the enterprise.

    """

    client_mutation_id: Optional[str] = None
    enterprise_id: ID
    setting_value: EnterpriseEnabledDisabledSettingValue


@dataclass(kw_only=True)
class UpdateEnvironmentInput:
    """
    UpdateEnvironmentInput - Autogenerated input type of UpdateEnvironment

    clientMutationId - A unique identifier for the client performing the mutation.

    environmentId - The node ID of the environment.

    preventSelfReview - Whether deployments to this environment can be approved by the user who created the deployment.

    reviewers - The ids of users or teams that can approve deployments to this environment

    waitTimer - The wait timer in minutes.

    """

    client_mutation_id: Optional[str] = None
    environment_id: ID
    prevent_self_review: Optional[bool] = None
    reviewers: Optional[list[ID]] = None
    wait_timer: Optional[int] = None


@dataclass(kw_only=True)
class UpdateIpAllowListEntryInput:
    """
    UpdateIpAllowListEntryInput - Autogenerated input type of UpdateIpAllowListEntry

    allowListValue - An IP address or range of addresses in CIDR notation.

    clientMutationId - A unique identifier for the client performing the mutation.

    ipAllowListEntryId - The ID of the IP allow list entry to update.

    isActive - Whether the IP allow list entry is active when an IP allow list is enabled.

    name - An optional name for the IP allow list entry.

    """

    allow_list_value: str
    client_mutation_id: Optional[str] = None
    ip_allow_list_entry_id: ID
    is_active: bool
    name: Optional[str] = None


@dataclass(kw_only=True)
class UpdateIssueCommentInput:
    """
    UpdateIssueCommentInput - Autogenerated input type of UpdateIssueComment

    body - The updated text of the comment.

    clientMutationId - A unique identifier for the client performing the mutation.

    id - The ID of the IssueComment to modify.

    """

    body: str
    client_mutation_id: Optional[str] = None
    id: ID


@dataclass(kw_only=True)
class UpdateLabelInput:
    """
    UpdateLabelInput - Autogenerated input type of UpdateLabel

    clientMutationId - A unique identifier for the client performing the mutation.

    color - A 6 character hex code, without the leading #, identifying the updated color of the label.

    description - A brief description of the label, such as its purpose.

    id - The Node ID of the label to be updated.

    name - The updated name of the label.

    """

    client_mutation_id: Optional[str] = None
    color: Optional[str] = None
    description: Optional[str] = None
    id: ID
    name: Optional[str] = None


@dataclass(kw_only=True)
class UpdateOrganizationAllowPrivateRepositoryForkingSettingInput:
    """
    UpdateOrganizationAllowPrivateRepositoryForkingSettingInput - Autogenerated input type of UpdateOrganizationAllowPrivateRepositoryForkingSetting

    clientMutationId - A unique identifier for the client performing the mutation.

    forkingEnabled - Enable forking of private repositories in the organization?

    organizationId - The ID of the organization on which to set the allow private repository forking setting.

    """

    client_mutation_id: Optional[str] = None
    forking_enabled: bool
    organization_id: ID


@dataclass(kw_only=True)
class UpdateParameters:
    """
    UpdateParameters - Only allow users with bypass permission to update matching refs.

    updateAllowsFetchAndMerge - Branch can pull changes from its upstream repository

    """

    update_allows_fetch_and_merge: bool


@dataclass(kw_only=True)
class UpdatePatreonSponsorabilityInput:
    """
        UpdatePatreonSponsorabilityInput - Autogenerated input type of UpdatePatreonSponsorability

        clientMutationId - A unique identifier for the client performing the mutation.

        enablePatreonSponsorships - Whether Patreon tiers should be shown on the GitHub Sponsors profile page,
    allowing potential sponsors to make their payment through Patreon instead of GitHub.

        sponsorableLogin - The username of the organization with the GitHub Sponsors profile, if any.
    Defaults to the GitHub Sponsors profile for the authenticated user if omitted.

    """

    client_mutation_id: Optional[str] = None
    enable_patreon_sponsorships: bool
    sponsorable_login: Optional[str] = None


@dataclass(kw_only=True)
class UpdateProjectColumnInput:
    """
    UpdateProjectColumnInput - Autogenerated input type of UpdateProjectColumn

    clientMutationId - A unique identifier for the client performing the mutation.

    name - The name of project column.

    projectColumnId - The ProjectColumn ID to update.

    """

    client_mutation_id: Optional[str] = None
    name: str
    project_column_id: ID


@dataclass(kw_only=True)
class UpdateProjectV2DraftIssueInput:
    """
    UpdateProjectV2DraftIssueInput - Autogenerated input type of UpdateProjectV2DraftIssue

    assigneeIds - The IDs of the assignees of the draft issue.

    body - The body of the draft issue.

    clientMutationId - A unique identifier for the client performing the mutation.

    draftIssueId - The ID of the draft issue to update.

    title - The title of the draft issue.

    """

    assignee_ids: Optional[list[ID]] = None
    body: Optional[str] = None
    client_mutation_id: Optional[str] = None
    draft_issue_id: ID
    title: Optional[str] = None


@dataclass(kw_only=True)
class UpdateProjectV2ItemPositionInput:
    """
    UpdateProjectV2ItemPositionInput - Autogenerated input type of UpdateProjectV2ItemPosition

    afterId - The ID of the item to position this item after. If omitted or set to null the item will be moved to top.

    clientMutationId - A unique identifier for the client performing the mutation.

    itemId - The ID of the item to be moved.

    projectId - The ID of the Project.

    """

    after_id: Optional[ID] = None
    client_mutation_id: Optional[str] = None
    item_id: ID
    project_id: ID


@dataclass(kw_only=True)
class UpdatePullRequestInput:
    """
        UpdatePullRequestInput - Autogenerated input type of UpdatePullRequest

        assigneeIds - An array of Node IDs of users for this pull request.

        baseRefName - The name of the branch you want your changes pulled into. This should be an existing branch
    on the current repository.

        body - The contents of the pull request.

        clientMutationId - A unique identifier for the client performing the mutation.

        labelIds - An array of Node IDs of labels for this pull request.

        maintainerCanModify - Indicates whether maintainers can modify the pull request.

        milestoneId - The Node ID of the milestone for this pull request.

        projectIds - An array of Node IDs for projects associated with this pull request.

        pullRequestId - The Node ID of the pull request.

        state - The target state of the pull request.

        title - The title of the pull request.

    """

    assignee_ids: Optional[list[ID]] = None
    base_ref_name: Optional[str] = None
    body: Optional[str] = None
    client_mutation_id: Optional[str] = None
    label_ids: Optional[list[ID]] = None
    maintainer_can_modify: Optional[bool] = None
    milestone_id: Optional[ID] = None
    project_ids: Optional[list[ID]] = None
    pull_request_id: ID
    state: Optional[PullRequestUpdateState] = None
    title: Optional[str] = None


@dataclass(kw_only=True)
class UpdatePullRequestReviewInput:
    """
    UpdatePullRequestReviewInput - Autogenerated input type of UpdatePullRequestReview

    body - The contents of the pull request review body.

    clientMutationId - A unique identifier for the client performing the mutation.

    pullRequestReviewId - The Node ID of the pull request review to modify.

    """

    body: str
    client_mutation_id: Optional[str] = None
    pull_request_review_id: ID


@dataclass(kw_only=True)
class UpdateRefsPayload:
    """
    UpdateRefsPayload - Autogenerated return type of UpdateRefs

    clientMutationId - A unique identifier for the client performing the mutation.

    """

    client_mutation_id: Optional[str] = None


@dataclass(kw_only=True)
class UpdateRepositoryWebCommitSignoffSettingInput:
    """
    UpdateRepositoryWebCommitSignoffSettingInput - Autogenerated input type of UpdateRepositoryWebCommitSignoffSetting

    clientMutationId - A unique identifier for the client performing the mutation.

    repositoryId - The ID of the repository to update.

    webCommitSignoffRequired - Indicates if the repository should require signoff on web-based commits.

    """

    client_mutation_id: Optional[str] = None
    repository_id: ID
    web_commit_signoff_required: bool


@dataclass(kw_only=True)
class UpdateSubscriptionInput:
    """
    UpdateSubscriptionInput - Autogenerated input type of UpdateSubscription

    clientMutationId - A unique identifier for the client performing the mutation.

    state - The new state of the subscription.

    subscribableId - The Node ID of the subscribable object to modify.

    """

    client_mutation_id: Optional[str] = None
    state: SubscriptionState
    subscribable_id: ID


@dataclass(kw_only=True)
class UpdateTeamDiscussionInput:
    """
        UpdateTeamDiscussionInput - Autogenerated input type of UpdateTeamDiscussion

        body - The updated text of the discussion.

        bodyVersion - The current version of the body content. If provided, this update operation
    will be rejected if the given version does not match the latest version on the server.

        clientMutationId - A unique identifier for the client performing the mutation.

        id - The Node ID of the discussion to modify.

        pinned - If provided, sets the pinned state of the updated discussion.

        title - The updated title of the discussion.

    """

    body: Optional[str] = None
    body_version: Optional[str] = None
    client_mutation_id: Optional[str] = None
    id: ID
    pinned: Optional[bool] = None
    title: Optional[str] = None


@dataclass(kw_only=True)
class UpdateTeamsRepositoryInput:
    """
    UpdateTeamsRepositoryInput - Autogenerated input type of UpdateTeamsRepository

    clientMutationId - A unique identifier for the client performing the mutation.

    permission - Permission that should be granted to the teams.

    repositoryId - Repository ID being granted access to.

    teamIds - A list of teams being granted access. Limit: 10

    """

    client_mutation_id: Optional[str] = None
    permission: RepositoryPermission
    repository_id: ID
    team_ids: list[ID]


@dataclass(kw_only=True)
class UpdateUserListInput:
    """
    UpdateUserListInput - Autogenerated input type of UpdateUserList

    clientMutationId - A unique identifier for the client performing the mutation.

    description - A description of the list

    isPrivate - Whether or not the list is private

    listId - The ID of the list to update.

    name - The name of the list

    """

    client_mutation_id: Optional[str] = None
    description: Optional[str] = None
    is_private: Optional[bool] = None
    list_id: ID
    name: Optional[str] = None


@dataclass(kw_only=True)
class UserEmailMetadata:
    """
    UserEmailMetadata - Email attributes from External Identity

    primary - Boolean to identify primary emails

    type - Type of email

    value - Email id

    """

    primary: Optional[bool] = None
    type: Optional[str] = None
    value: str


@dataclass(kw_only=True)
class UserStatusOrder:
    """
    UserStatusOrder - Ordering options for user status connections.

    direction - The ordering direction.

    field - The field to order user statuses by.

    """

    direction: OrderDirection
    field: UserStatusOrderField


@dataclass(kw_only=True)
class VerifyVerifiableDomainInput:
    """
    VerifyVerifiableDomainInput - Autogenerated input type of VerifyVerifiableDomain

    clientMutationId - A unique identifier for the client performing the mutation.

    id - The ID of the verifiable domain to verify.

    """

    client_mutation_id: Optional[str] = None
    id: ID


@dataclass(kw_only=True)
class WorkflowFileReference:
    """
    WorkflowFileReference - A workflow that must run for this rule to pass

    path - The path to the workflow file

    ref - The ref (branch or tag) of the workflow file to use

    repositoryId - The ID of the repository where the workflow is defined

    sha - The commit SHA of the workflow file to use

    """

    path: str
    ref: Optional[str] = None
    repository_id: int
    sha: Optional[str] = None


@dataclass(kw_only=True)
class WorkflowRunOrder:
    """
    WorkflowRunOrder - Ways in which lists of workflow runs can be ordered upon return.

    direction - The direction in which to order workflow runs by the specified field.

    field - The field by which to order workflows.

    """

    direction: OrderDirection
    field: WorkflowRunOrderField
